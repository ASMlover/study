// Generated automatically from `opt_meta.wren`. Do not edit.
static const char* metaModuleSource =
"\n"
"class Meta {\n"
"	static getModuleVariables(module) {\n"
"		if (!(module is String)) {\n"
"			Fiber.abort(\"Module name must be a string.\")\n"
"		}\n"
"		var result = getModuleVariables_(module)\n"
"		if (result != null)\n"
"			return result\n"
"\n"
"		Fiber.abort(\"Could not find a module named `%(module)`.\")\n"
"	}\n"
"\n"
"	static eval(source) {\n"
"		if (!(source is String)) {\n"
"			Fiber.abort(\"Source code must be a string.\")\n"
"		}\n"
"\n"
"		var closure = compile_(source, false, false)\n"
"		if (closure == null) {\n"
"			Fiber.abort(\"Could not compile source code.\")\n"
"		}\n"
"\n"
"		closure.call()\n"
"	}\n"
"\n"
"	static compileExpression(source) {\n"
"		if (!(source is String)) {\n"
"			Fiber.abort(\"Source code must be a string.\")\n"
"		}\n"
"		return compile_(source, true, true)\n"
"	}\n"
"\n"
"	static compile(source) {\n"
"		if (!(source is String)) {\n"
"			Fiber.abort(\"Source code must be a string.\")\n"
"		}\n"
"		return compile_(source, false, true)\n"
"	}\n"
"\n"
"	foreign static compile_(source, isExpresssion, printErrors)\n"
"	foreign static getModuleVariables_(module)\n"
"}\n";
