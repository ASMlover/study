# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nyx_client_gate.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nyx_common_pb2 as nyx__common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='nyx_client_gate.proto',
  package='nyx.core',
  syntax='proto3',
  serialized_pb=_b('\n\x15nyx_client_gate.proto\x12\x08nyx.core\x1a\x10nyx_common.proto\"$\n\rEncryptString\x12\x13\n\x0b\x65ncrypt_str\x18\x01 \x01(\x0c\"\x1b\n\x0bSessionSeed\x12\x0c\n\x04seed\x18\x01 \x01(\x03\"i\n\nSessionKey\x12\x1b\n\x13random_padding_head\x18\x01 \x01(\x0c\x12\x13\n\x0bsession_key\x18\x02 \x01(\x0c\x12\x0c\n\x04seed\x18\x03 \x01(\x03\x12\x1b\n\x13random_padding_tail\x18\x04 \x01(\x0c\x32\xe1\x02\n\rSClientToGate\x12.\n\x0cseed_request\x12\x0e.nyx.core.Void\x1a\x0e.nyx.core.Void\x12\x36\n\x0bsession_key\x12\x17.nyx.core.EncryptString\x1a\x0e.nyx.core.Void\x12:\n\x0e\x63onnect_server\x12\x18.nyx.core.ConnectRequest\x1a\x0e.nyx.core.Void\x12<\n\x0e\x65ntity_message\x12\x1a.nyx.core.EntityRpcMessage\x1a\x0e.nyx.core.Void\x12:\n\x0csoul_message\x12\x1a.nyx.core.EntityRpcMessage\x1a\x0e.nyx.core.Void\x12\x32\n\x0creg_md5index\x12\x12.nyx.core.Md5Index\x1a\x0e.nyx.core.Void2\xd3\x03\n\rSGateToClient\x12\x36\n\rseed_response\x12\x15.nyx.core.SessionSeed\x1a\x0e.nyx.core.Void\x12\x30\n\x0eon_session_key\x12\x0e.nyx.core.Void\x1a\x0e.nyx.core.Void\x12>\n\x11on_connect_server\x12\x19.nyx.core.ConnectResponse\x1a\x0e.nyx.core.Void\x12\x35\n\rcreate_entity\x12\x14.nyx.core.EntityInfo\x1a\x0e.nyx.core.Void\x12\x36\n\x0e\x64\x65stroy_entity\x12\x14.nyx.core.EntityInfo\x1a\x0e.nyx.core.Void\x12<\n\x0e\x65ntity_message\x12\x1a.nyx.core.EntityRpcMessage\x1a\x0e.nyx.core.Void\x12\x37\n\x0e\x63hat_to_client\x12\x15.nyx.core.OutbandInfo\x1a\x0e.nyx.core.Void\x12\x32\n\x0creg_md5index\x12\x12.nyx.core.Md5Index\x1a\x0e.nyx.core.VoidB\x06\x80\x01\x01\x90\x01\x01\x62\x06proto3')
  ,
  dependencies=[nyx__common__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ENCRYPTSTRING = _descriptor.Descriptor(
  name='EncryptString',
  full_name='nyx.core.EncryptString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='encrypt_str', full_name='nyx.core.EncryptString.encrypt_str', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=89,
)


_SESSIONSEED = _descriptor.Descriptor(
  name='SessionSeed',
  full_name='nyx.core.SessionSeed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seed', full_name='nyx.core.SessionSeed.seed', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=91,
  serialized_end=118,
)


_SESSIONKEY = _descriptor.Descriptor(
  name='SessionKey',
  full_name='nyx.core.SessionKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='random_padding_head', full_name='nyx.core.SessionKey.random_padding_head', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='session_key', full_name='nyx.core.SessionKey.session_key', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='seed', full_name='nyx.core.SessionKey.seed', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='random_padding_tail', full_name='nyx.core.SessionKey.random_padding_tail', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=225,
)

DESCRIPTOR.message_types_by_name['EncryptString'] = _ENCRYPTSTRING
DESCRIPTOR.message_types_by_name['SessionSeed'] = _SESSIONSEED
DESCRIPTOR.message_types_by_name['SessionKey'] = _SESSIONKEY

EncryptString = _reflection.GeneratedProtocolMessageType('EncryptString', (_message.Message,), dict(
  DESCRIPTOR = _ENCRYPTSTRING,
  __module__ = 'nyx_client_gate_pb2'
  # @@protoc_insertion_point(class_scope:nyx.core.EncryptString)
  ))
_sym_db.RegisterMessage(EncryptString)

SessionSeed = _reflection.GeneratedProtocolMessageType('SessionSeed', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONSEED,
  __module__ = 'nyx_client_gate_pb2'
  # @@protoc_insertion_point(class_scope:nyx.core.SessionSeed)
  ))
_sym_db.RegisterMessage(SessionSeed)

SessionKey = _reflection.GeneratedProtocolMessageType('SessionKey', (_message.Message,), dict(
  DESCRIPTOR = _SESSIONKEY,
  __module__ = 'nyx_client_gate_pb2'
  # @@protoc_insertion_point(class_scope:nyx.core.SessionKey)
  ))
_sym_db.RegisterMessage(SessionKey)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\200\001\001\220\001\001'))

_SCLIENTTOGATE = _descriptor.ServiceDescriptor(
  name='SClientToGate',
  full_name='nyx.core.SClientToGate',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=228,
  serialized_end=581,
  methods=[
  _descriptor.MethodDescriptor(
    name='seed_request',
    full_name='nyx.core.SClientToGate.seed_request',
    index=0,
    containing_service=None,
    input_type=nyx__common__pb2._VOID,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='session_key',
    full_name='nyx.core.SClientToGate.session_key',
    index=1,
    containing_service=None,
    input_type=_ENCRYPTSTRING,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='connect_server',
    full_name='nyx.core.SClientToGate.connect_server',
    index=2,
    containing_service=None,
    input_type=nyx__common__pb2._CONNECTREQUEST,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='entity_message',
    full_name='nyx.core.SClientToGate.entity_message',
    index=3,
    containing_service=None,
    input_type=nyx__common__pb2._ENTITYRPCMESSAGE,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='soul_message',
    full_name='nyx.core.SClientToGate.soul_message',
    index=4,
    containing_service=None,
    input_type=nyx__common__pb2._ENTITYRPCMESSAGE,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='reg_md5index',
    full_name='nyx.core.SClientToGate.reg_md5index',
    index=5,
    containing_service=None,
    input_type=nyx__common__pb2._MD5INDEX,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
])

SClientToGate = service_reflection.GeneratedServiceType('SClientToGate', (_service.Service,), dict(
  DESCRIPTOR = _SCLIENTTOGATE,
  __module__ = 'nyx_client_gate_pb2'
  ))

SClientToGate_Stub = service_reflection.GeneratedServiceStubType('SClientToGate_Stub', (SClientToGate,), dict(
  DESCRIPTOR = _SCLIENTTOGATE,
  __module__ = 'nyx_client_gate_pb2'
  ))



_SGATETOCLIENT = _descriptor.ServiceDescriptor(
  name='SGateToClient',
  full_name='nyx.core.SGateToClient',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=584,
  serialized_end=1051,
  methods=[
  _descriptor.MethodDescriptor(
    name='seed_response',
    full_name='nyx.core.SGateToClient.seed_response',
    index=0,
    containing_service=None,
    input_type=_SESSIONSEED,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='on_session_key',
    full_name='nyx.core.SGateToClient.on_session_key',
    index=1,
    containing_service=None,
    input_type=nyx__common__pb2._VOID,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='on_connect_server',
    full_name='nyx.core.SGateToClient.on_connect_server',
    index=2,
    containing_service=None,
    input_type=nyx__common__pb2._CONNECTRESPONSE,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='create_entity',
    full_name='nyx.core.SGateToClient.create_entity',
    index=3,
    containing_service=None,
    input_type=nyx__common__pb2._ENTITYINFO,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='destroy_entity',
    full_name='nyx.core.SGateToClient.destroy_entity',
    index=4,
    containing_service=None,
    input_type=nyx__common__pb2._ENTITYINFO,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='entity_message',
    full_name='nyx.core.SGateToClient.entity_message',
    index=5,
    containing_service=None,
    input_type=nyx__common__pb2._ENTITYRPCMESSAGE,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='chat_to_client',
    full_name='nyx.core.SGateToClient.chat_to_client',
    index=6,
    containing_service=None,
    input_type=nyx__common__pb2._OUTBANDINFO,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='reg_md5index',
    full_name='nyx.core.SGateToClient.reg_md5index',
    index=7,
    containing_service=None,
    input_type=nyx__common__pb2._MD5INDEX,
    output_type=nyx__common__pb2._VOID,
    options=None,
  ),
])

SGateToClient = service_reflection.GeneratedServiceType('SGateToClient', (_service.Service,), dict(
  DESCRIPTOR = _SGATETOCLIENT,
  __module__ = 'nyx_client_gate_pb2'
  ))

SGateToClient_Stub = service_reflection.GeneratedServiceStubType('SGateToClient_Stub', (SGateToClient,), dict(
  DESCRIPTOR = _SGATETOCLIENT,
  __module__ = 'nyx_client_gate_pb2'
  ))


# @@protoc_insertion_point(module_scope)
