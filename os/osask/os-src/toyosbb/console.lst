     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_task_now
     7 00000000                                 	EXTERN	_mem_mgr_alloc_4k
     8 00000000                                 	EXTERN	_fifo_init
     9 00000000                                 	EXTERN	_timer_alloc
    10 00000000                                 	EXTERN	_timer_init
    11 00000000                                 	EXTERN	_timer_settimer
    12 00000000                                 	EXTERN	_file_readfat
    13 00000000                                 	EXTERN	_io_cli
    14 00000000                                 	EXTERN	_fifo_size
    15 00000000                                 	EXTERN	_fifo_get
    16 00000000                                 	EXTERN	_io_sti
    17 00000000                                 	EXTERN	_fill_box8
    18 00000000                                 	EXTERN	_layers_refresh
    19 00000000                                 	EXTERN	_task_sleep
    20 00000000                                 	EXTERN	_drawstring_and_refresh
    21 00000000                                 	EXTERN	_mem_mgr_total
    22 00000000                                 	EXTERN	_sprintf
    23 00000000                                 	EXTERN	_file_search
    24 00000000                                 	EXTERN	_file_loadfile
    25 00000000                                 	EXTERN	_mem_mgr_free_4k
    26 00000000                                 	EXTERN	_set_segment_descriptor
    27 00000000                                 	EXTERN	_start_user_app
    28 00000000                                 	EXTERN	_timer_cancelall
    29 00000000                                 	EXTERN	_layer_free
    30 00000000                                 	EXTERN	_layer_alloc
    31 00000000                                 	EXTERN	_layer_setbuf
    32 00000000                                 	EXTERN	_make_window8
    33 00000000                                 	EXTERN	_layer_slide
    34 00000000                                 	EXTERN	_layer_updown
    35 00000000                                 	EXTERN	_draw_font8_asc
    36 00000000                                 	EXTERN	_mem_mgr_init
    37 00000000                                 	EXTERN	_mem_mgr_free
    38 00000000                                 	EXTERN	_mem_mgr_alloc
    39 00000000                                 	EXTERN	_timer_free
    40 00000000                                 [FILE "console.c"]
    41                                          [SECTION .text]
    42 00000000                                 	GLOBAL	_console_task
    43 00000000                                 _console_task:
    44 00000000 55                              	PUSH	EBP
    45 00000001 89 E5                           	MOV	EBP,ESP
    46 00000003 57                              	PUSH	EDI
    47 00000004 56                              	PUSH	ESI
    48 00000005 53                              	PUSH	EBX
    49 00000006 8D B5 FFFFFDB4                  	LEA	ESI,DWORD [-588+EBP]
    50 0000000C 81 EC 00000248                  	SUB	ESP,584
    51 00000012 E8 [00000000]                   	CALL	_task_now
    52 00000017 68 00002D00                     	PUSH	11520
    53 0000001C 89 C7                           	MOV	EDI,EAX
    54 0000001E 68 003C0000                     	PUSH	3932160
    55 00000023 8D 5F 10                        	LEA	EBX,DWORD [16+EDI]
    56 00000026 E8 [00000000]                   	CALL	_mem_mgr_alloc_4k
    57 0000002B C7 85 FFFFFDB8 00000008         	MOV	DWORD [-584+EBP],8
    58 00000035 89 85 FFFFFDB0                  	MOV	DWORD [-592+EBP],EAX
    59 0000003B 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    60 0000003E C7 85 FFFFFDBC 0000001C         	MOV	DWORD [-580+EBP],28
    61 00000048 C7 85 FFFFFDC0 FFFFFFFF         	MOV	DWORD [-576+EBP],-1
    62 00000052 89 35 00000FEC                  	MOV	DWORD [4076],ESI
    63 00000058 89 85 FFFFFDB4                  	MOV	DWORD [-588+EBP],EAX
    64 0000005E 57                              	PUSH	EDI
    65 0000005F 8D 85 FFFFFDF4                  	LEA	EAX,DWORD [-524+EBP]
    66 00000065 68 00000080                     	PUSH	128
    67 0000006A 50                              	PUSH	EAX
    68 0000006B 53                              	PUSH	EBX
    69 0000006C E8 [00000000]                   	CALL	_fifo_init
    70 00000071 E8 [00000000]                   	CALL	_timer_alloc
    71 00000076 6A 01                           	PUSH	1
    72 00000078 53                              	PUSH	EBX
    73 00000079 50                              	PUSH	EAX
    74 0000007A 89 85 FFFFFDC4                  	MOV	DWORD [-572+EBP],EAX
    75 00000080 E8 [00000000]                   	CALL	_timer_init
    76 00000085 83 C4 24                        	ADD	ESP,36
    77 00000088 6A 32                           	PUSH	50
    78 0000008A FF B5 FFFFFDC4                  	PUSH	DWORD [-572+EBP]
    79 00000090 E8 [00000000]                   	CALL	_timer_settimer
    80 00000095 68 00100200                     	PUSH	1049088
    81 0000009A FF B5 FFFFFDB0                  	PUSH	DWORD [-592+EBP]
    82 000000A0 E8 [00000000]                   	CALL	_file_readfat
    83 000000A5 6A 01                           	PUSH	1
    84 000000A7 6A 3E                           	PUSH	62
    85 000000A9 56                              	PUSH	ESI
    86 000000AA E8 000002F6                     	CALL	_console_putchar
    87 000000AF 83 C4 1C                        	ADD	ESP,28
    88 000000B2                                 L2:
    89 000000B2 8D 5F 10                        	LEA	EBX,DWORD [16+EDI]
    90 000000B5 E8 [00000000]                   	CALL	_io_cli
    91 000000BA 53                              	PUSH	EBX
    92 000000BB E8 [00000000]                   	CALL	_fifo_size
    93 000000C0 5E                              	POP	ESI
    94 000000C1 85 C0                           	TEST	EAX,EAX
    95 000000C3 0F 84 00000210                  	JE	L24
    96 000000C9 53                              	PUSH	EBX
    97 000000CA E8 [00000000]                   	CALL	_fifo_get
    98 000000CF 89 C6                           	MOV	ESI,EAX
    99 000000D1 E8 [00000000]                   	CALL	_io_sti
   100 000000D6 59                              	POP	ECX
   101 000000D7 83 FE 01                        	CMP	ESI,1
   102 000000DA 0F 8E 00000197                  	JLE	L25
   103 000000E0                                 L7:
   104 000000E0 83 FE 02                        	CMP	ESI,2
   105 000000E3 0F 84 0000017F                  	JE	L26
   106 000000E9                                 L12:
   107 000000E9 83 FE 03                        	CMP	ESI,3
   108 000000EC 0F 84 0000013F                  	JE	L27
   109 000000F2                                 L13:
   110 000000F2 8D 9E FFFFFF00                  	LEA	EBX,DWORD [-256+ESI]
   111 000000F8 89 9D FFFFFDAC                  	MOV	DWORD [-596+EBP],EBX
   112 000000FE 81 FB 000000FF                  	CMP	EBX,255
   113 00000104 77 54                           	JA	L14
   114 00000106 81 FE 00000108                  	CMP	ESI,264
   115 0000010C 0F 84 000000F6                  	JE	L28
   116 00000112 81 FE 0000010A                  	CMP	ESI,266
   117 00000118 0F 84 00000099                  	JE	L29
   118 0000011E 8B 8D FFFFFDB8                  	MOV	ECX,DWORD [-584+EBP]
   119 00000124 81 F9 000000EF                  	CMP	ECX,239
   120 0000012A 7F 2E                           	JG	L14
   121 0000012C 89 C8                           	MOV	EAX,ECX
   122 0000012E BA 00000008                     	MOV	EDX,8
   123 00000133 89 D3                           	MOV	EBX,EDX
   124 00000135 6A 01                           	PUSH	1
   125 00000137 99                              	CDQ
   126 00000138 F7 FB                           	IDIV	EBX
   127 0000013A 89 C1                           	MOV	ECX,EAX
   128 0000013C 89 F0                           	MOV	EAX,ESI
   129 0000013E 88 84 0D FFFFFDD2               	MOV	BYTE [-558+EBP+ECX*1],AL
   130 00000145 8D 85 FFFFFDB4                  	LEA	EAX,DWORD [-588+EBP]
   131 0000014B FF B5 FFFFFDAC                  	PUSH	DWORD [-596+EBP]
   132 00000151 50                              	PUSH	EAX
   133 00000152                                 L22:
   134 00000152 E8 0000024E                     	CALL	_console_putchar
   135 00000157                                 L23:
   136 00000157 83 C4 0C                        	ADD	ESP,12
   137 0000015A                                 L14:
   138 0000015A 83 BD FFFFFDC0 00               	CMP	DWORD [-576+EBP],0
   139 00000161 78 2E                           	JS	L21
   140 00000163 8B 8D FFFFFDBC                  	MOV	ECX,DWORD [-580+EBP]
   141 00000169 8B 95 FFFFFDB8                  	MOV	EDX,DWORD [-584+EBP]
   142 0000016F 8D 41 0F                        	LEA	EAX,DWORD [15+ECX]
   143 00000172 50                              	PUSH	EAX
   144 00000173 8D 42 07                        	LEA	EAX,DWORD [7+EDX]
   145 00000176 50                              	PUSH	EAX
   146 00000177 51                              	PUSH	ECX
   147 00000178 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
   148 0000017B 52                              	PUSH	EDX
   149 0000017C 0F B6 85 FFFFFDC0               	MOVZX	EAX,BYTE [-576+EBP]
   150 00000183 50                              	PUSH	EAX
   151 00000184 FF 71 04                        	PUSH	DWORD [4+ECX]
   152 00000187 FF 31                           	PUSH	DWORD [ECX]
   153 00000189 E8 [00000000]                   	CALL	_fill_box8
   154 0000018E 83 C4 1C                        	ADD	ESP,28
   155 00000191                                 L21:
   156 00000191 8B 8D FFFFFDBC                  	MOV	ECX,DWORD [-580+EBP]
   157 00000197 8B 95 FFFFFDB8                  	MOV	EDX,DWORD [-584+EBP]
   158 0000019D 8D 41 10                        	LEA	EAX,DWORD [16+ECX]
   159 000001A0 50                              	PUSH	EAX
   160 000001A1 8D 42 08                        	LEA	EAX,DWORD [8+EDX]
   161 000001A4 50                              	PUSH	EAX
   162 000001A5 51                              	PUSH	ECX
   163 000001A6 52                              	PUSH	EDX
   164 000001A7 FF 75 08                        	PUSH	DWORD [8+EBP]
   165 000001AA E8 [00000000]                   	CALL	_layers_refresh
   166 000001AF 83 C4 14                        	ADD	ESP,20
   167 000001B2 E9 FFFFFEFB                     	JMP	L2
   168 000001B7                                 L29:
   169 000001B7 6A 00                           	PUSH	0
   170 000001B9 8D 9D FFFFFDB4                  	LEA	EBX,DWORD [-588+EBP]
   171 000001BF 6A 20                           	PUSH	32
   172 000001C1 53                              	PUSH	EBX
   173 000001C2 E8 000001DE                     	CALL	_console_putchar
   174 000001C7 53                              	PUSH	EBX
   175 000001C8 8B 85 FFFFFDB8                  	MOV	EAX,DWORD [-584+EBP]
   176 000001CE BA 00000008                     	MOV	EDX,8
   177 000001D3 89 D1                           	MOV	ECX,EDX
   178 000001D5 99                              	CDQ
   179 000001D6 F7 F9                           	IDIV	ECX
   180 000001D8 C6 84 05 FFFFFDD2 00            	MOV	BYTE [-558+EBP+EAX*1],0
   181 000001E0 E8 00000105                     	CALL	_console_newline
   182 000001E5 8D 85 FFFFFDD4                  	LEA	EAX,DWORD [-556+EBP]
   183 000001EB FF 75 0C                        	PUSH	DWORD [12+EBP]
   184 000001EE FF B5 FFFFFDB0                  	PUSH	DWORD [-592+EBP]
   185 000001F4 50                              	PUSH	EAX
   186 000001F5 53                              	PUSH	EBX
   187 000001F6 E8 0000024D                     	CALL	_console_runcmd
   188 000001FB 83 C4 20                        	ADD	ESP,32
   189 000001FE 6A 01                           	PUSH	1
   190 00000200 6A 3E                           	PUSH	62
   191 00000202 53                              	PUSH	EBX
   192 00000203 E9 FFFFFF4A                     	JMP	L22
   193 00000208                                 L28:
   194 00000208 83 BD FFFFFDB8 10               	CMP	DWORD [-584+EBP],16
   195 0000020F 0F 8E FFFFFF45                  	JLE	L14
   196 00000215 6A 00                           	PUSH	0
   197 00000217 8D 85 FFFFFDB4                  	LEA	EAX,DWORD [-588+EBP]
   198 0000021D 6A 20                           	PUSH	32
   199 0000021F 50                              	PUSH	EAX
   200 00000220 E8 00000180                     	CALL	_console_putchar
   201 00000225 83 AD FFFFFDB8 08               	SUB	DWORD [-584+EBP],8
   202 0000022C E9 FFFFFF26                     	JMP	L23
   203 00000231                                 L27:
   204 00000231 8B 8D FFFFFDBC                  	MOV	ECX,DWORD [-580+EBP]
   205 00000237 8B 95 FFFFFDB8                  	MOV	EDX,DWORD [-584+EBP]
   206 0000023D 8D 41 0F                        	LEA	EAX,DWORD [15+ECX]
   207 00000240 50                              	PUSH	EAX
   208 00000241 8D 42 07                        	LEA	EAX,DWORD [7+EDX]
   209 00000244 50                              	PUSH	EAX
   210 00000245 51                              	PUSH	ECX
   211 00000246 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
   212 00000249 52                              	PUSH	EDX
   213 0000024A 6A 00                           	PUSH	0
   214 0000024C FF 71 04                        	PUSH	DWORD [4+ECX]
   215 0000024F FF 31                           	PUSH	DWORD [ECX]
   216 00000251 E8 [00000000]                   	CALL	_fill_box8
   217 00000256 83 C4 1C                        	ADD	ESP,28
   218 00000259 C7 85 FFFFFDC0 FFFFFFFF         	MOV	DWORD [-576+EBP],-1
   219 00000263 E9 FFFFFE8A                     	JMP	L13
   220 00000268                                 L26:
   221 00000268 C7 85 FFFFFDC0 00000007         	MOV	DWORD [-576+EBP],7
   222 00000272 E9 FFFFFE72                     	JMP	L12
   223 00000277                                 L25:
   224 00000277 85 F6                           	TEST	ESI,ESI
   225 00000279 74 38                           	JE	L8
   226 0000027B 6A 00                           	PUSH	0
   227 0000027D 53                              	PUSH	EBX
   228 0000027E FF B5 FFFFFDC4                  	PUSH	DWORD [-572+EBP]
   229 00000284 E8 [00000000]                   	CALL	_timer_init
   230 00000289 83 C4 0C                        	ADD	ESP,12
   231 0000028C 83 BD FFFFFDC0 00               	CMP	DWORD [-576+EBP],0
   232 00000293 78 0A                           	JS	L10
   233 00000295 C7 85 FFFFFDC0 00000007         	MOV	DWORD [-576+EBP],7
   234 0000029F                                 L10:
   235 0000029F 6A 32                           	PUSH	50
   236 000002A1 FF B5 FFFFFDC4                  	PUSH	DWORD [-572+EBP]
   237 000002A7 E8 [00000000]                   	CALL	_timer_settimer
   238 000002AC 58                              	POP	EAX
   239 000002AD 5A                              	POP	EDX
   240 000002AE E9 FFFFFE2D                     	JMP	L7
   241 000002B3                                 L8:
   242 000002B3 6A 01                           	PUSH	1
   243 000002B5 53                              	PUSH	EBX
   244 000002B6 FF B5 FFFFFDC4                  	PUSH	DWORD [-572+EBP]
   245 000002BC E8 [00000000]                   	CALL	_timer_init
   246 000002C1 83 C4 0C                        	ADD	ESP,12
   247 000002C4 83 BD FFFFFDC0 00               	CMP	DWORD [-576+EBP],0
   248 000002CB 78 D2                           	JS	L10
   249 000002CD C7 85 FFFFFDC0 00000000         	MOV	DWORD [-576+EBP],0
   250 000002D7 EB C6                           	JMP	L10
   251 000002D9                                 L24:
   252 000002D9 57                              	PUSH	EDI
   253 000002DA E8 [00000000]                   	CALL	_task_sleep
   254 000002DF E8 [00000000]                   	CALL	_io_sti
   255 000002E4 5B                              	POP	EBX
   256 000002E5 E9 FFFFFDC8                     	JMP	L2
   257 000002EA                                 	GLOBAL	_console_newline
   258 000002EA                                 _console_newline:
   259 000002EA 55                              	PUSH	EBP
   260 000002EB 89 E5                           	MOV	EBP,ESP
   261 000002ED 57                              	PUSH	EDI
   262 000002EE 56                              	PUSH	ESI
   263 000002EF 53                              	PUSH	EBX
   264 000002F0 57                              	PUSH	EDI
   265 000002F1 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   266 000002F4 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   267 000002F7 8B 00                           	MOV	EAX,DWORD [EAX]
   268 000002F9 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   269 000002FC 8B 42 08                        	MOV	EAX,DWORD [8+EDX]
   270 000002FF 3D 0000008B                     	CMP	EAX,139
   271 00000304 7F 18                           	JG	L31
   272 00000306 83 C0 10                        	ADD	EAX,16
   273 00000309 89 42 08                        	MOV	DWORD [8+EDX],EAX
   274 0000030C                                 L32:
   275 0000030C 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   276 0000030F C7 40 04 00000008               	MOV	DWORD [4+EAX],8
   277 00000316 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   278 00000319 5B                              	POP	EBX
   279 0000031A 5E                              	POP	ESI
   280 0000031B 5F                              	POP	EDI
   281 0000031C 5D                              	POP	EBP
   282 0000031D C3                              	RET
   283 0000031E                                 L31:
   284 0000031E BF 0000001C                     	MOV	EDI,28
   285 00000323                                 L42:
   286 00000323 BE 00000008                     	MOV	ESI,8
   287 00000328                                 L41:
   288 00000328 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   289 0000032B 89 FA                           	MOV	EDX,EDI
   290 0000032D 8B 48 04                        	MOV	ECX,DWORD [4+EAX]
   291 00000330 8B 18                           	MOV	EBX,DWORD [EAX]
   292 00000332 8D 47 10                        	LEA	EAX,DWORD [16+EDI]
   293 00000335 0F AF C1                        	IMUL	EAX,ECX
   294 00000338 0F AF D1                        	IMUL	EDX,ECX
   295 0000033B 8D 04 30                        	LEA	EAX,DWORD [EAX+ESI*1]
   296 0000033E 8D 14 32                        	LEA	EDX,DWORD [EDX+ESI*1]
   297 00000341 46                              	INC	ESI
   298 00000342 8A 04 18                        	MOV	AL,BYTE [EAX+EBX*1]
   299 00000345 81 FE 000000F7                  	CMP	ESI,247
   300 0000034B 88 04 1A                        	MOV	BYTE [EDX+EBX*1],AL
   301 0000034E 7E D8                           	JLE	L41
   302 00000350 47                              	INC	EDI
   303 00000351 81 FF 0000008B                  	CMP	EDI,139
   304 00000357 7E CA                           	JLE	L42
   305 00000359 BF 0000008C                     	MOV	EDI,140
   306 0000035E                                 L52:
   307 0000035E BE 00000008                     	MOV	ESI,8
   308 00000363                                 L51:
   309 00000363 8B 55 F0                        	MOV	EDX,DWORD [-16+EBP]
   310 00000366 89 F8                           	MOV	EAX,EDI
   311 00000368 89 D1                           	MOV	ECX,EDX
   312 0000036A 0F AF 42 04                     	IMUL	EAX,DWORD [4+EDX]
   313 0000036E 8B 12                           	MOV	EDX,DWORD [EDX]
   314 00000370 8D 04 30                        	LEA	EAX,DWORD [EAX+ESI*1]
   315 00000373 46                              	INC	ESI
   316 00000374 81 FE 000000F7                  	CMP	ESI,247
   317 0000037A C6 04 10 00                     	MOV	BYTE [EAX+EDX*1],0
   318 0000037E 7E E3                           	JLE	L51
   319 00000380 47                              	INC	EDI
   320 00000381 81 FF 0000009B                  	CMP	EDI,155
   321 00000387 7E D5                           	JLE	L52
   322 00000389 68 0000009C                     	PUSH	156
   323 0000038E 68 000000F8                     	PUSH	248
   324 00000393 6A 1C                           	PUSH	28
   325 00000395 6A 08                           	PUSH	8
   326 00000397 51                              	PUSH	ECX
   327 00000398 E8 [00000000]                   	CALL	_layers_refresh
   328 0000039D 83 C4 14                        	ADD	ESP,20
   329 000003A0 E9 FFFFFF67                     	JMP	L32
   330                                          [SECTION .data]
   331 00000000                                 LC0:
   332 00000000 20 00                           	DB	" ",0x00
   333                                          [SECTION .text]
   334 000003A5                                 	GLOBAL	_console_putchar
   335 000003A5                                 _console_putchar:
   336 000003A5 55                              	PUSH	EBP
   337 000003A6 89 E5                           	MOV	EBP,ESP
   338 000003A8 53                              	PUSH	EBX
   339 000003A9 50                              	PUSH	EAX
   340 000003AA 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   341 000003AD 8A 55 10                        	MOV	DL,BYTE [16+EBP]
   342 000003B0 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   343 000003B3 88 55 F9                        	MOV	BYTE [-7+EBP],DL
   344 000003B6 88 45 FA                        	MOV	BYTE [-6+EBP],AL
   345 000003B9 3C 09                           	CMP	AL,9
   346 000003BB C6 45 FB 00                     	MOV	BYTE [-5+EBP],0
   347 000003BF 74 46                           	JE	L63
   348 000003C1 3C 0A                           	CMP	AL,10
   349 000003C3 74 39                           	JE	L75
   350 000003C5 3C 0D                           	CMP	AL,13
   351 000003C7 74 30                           	JE	L61
   352 000003C9 6A 01                           	PUSH	1
   353 000003CB 8D 45 FA                        	LEA	EAX,DWORD [-6+EBP]
   354 000003CE 50                              	PUSH	EAX
   355 000003CF 6A 00                           	PUSH	0
   356 000003D1 6A 07                           	PUSH	7
   357 000003D3 FF 73 08                        	PUSH	DWORD [8+EBX]
   358 000003D6 FF 73 04                        	PUSH	DWORD [4+EBX]
   359 000003D9 FF 33                           	PUSH	DWORD [EBX]
   360 000003DB E8 [00000000]                   	CALL	_drawstring_and_refresh
   361 000003E0 83 C4 1C                        	ADD	ESP,28
   362 000003E3 80 7D F9 00                     	CMP	BYTE [-7+EBP],0
   363 000003E7 74 10                           	JE	L61
   364 000003E9 8B 43 04                        	MOV	EAX,DWORD [4+EBX]
   365 000003EC 83 C0 08                        	ADD	EAX,8
   366 000003EF 89 43 04                        	MOV	DWORD [4+EBX],EAX
   367 000003F2 3D 000000F8                     	CMP	EAX,248
   368 000003F7 74 05                           	JE	L75
   369 000003F9                                 L61:
   370 000003F9 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   371 000003FC C9                              	LEAVE
   372 000003FD C3                              	RET
   373 000003FE                                 L75:
   374 000003FE 53                              	PUSH	EBX
   375 000003FF E8 FFFFFEE6                     	CALL	_console_newline
   376 00000404 58                              	POP	EAX
   377 00000405 EB F2                           	JMP	L61
   378 00000407                                 L63:
   379 00000407 6A 01                           	PUSH	1
   380 00000409 68 [00000000]                   	PUSH	LC0
   381 0000040E 6A 00                           	PUSH	0
   382 00000410 6A 07                           	PUSH	7
   383 00000412 FF 73 08                        	PUSH	DWORD [8+EBX]
   384 00000415 FF 73 04                        	PUSH	DWORD [4+EBX]
   385 00000418 FF 33                           	PUSH	DWORD [EBX]
   386 0000041A E8 [00000000]                   	CALL	_drawstring_and_refresh
   387 0000041F 83 C4 1C                        	ADD	ESP,28
   388 00000422 8B 43 04                        	MOV	EAX,DWORD [4+EBX]
   389 00000425 83 C0 08                        	ADD	EAX,8
   390 00000428 89 43 04                        	MOV	DWORD [4+EBX],EAX
   391 0000042B 3D 000000F8                     	CMP	EAX,248
   392 00000430 74 0D                           	JE	L76
   393 00000432                                 L66:
   394 00000432 8B 43 04                        	MOV	EAX,DWORD [4+EBX]
   395 00000435 83 E8 08                        	SUB	EAX,8
   396 00000438 83 E0 1F                        	AND	EAX,31
   397 0000043B 75 CA                           	JNE	L63
   398 0000043D EB BA                           	JMP	L61
   399 0000043F                                 L76:
   400 0000043F 53                              	PUSH	EBX
   401 00000440 E8 FFFFFEA5                     	CALL	_console_newline
   402 00000445 58                              	POP	EAX
   403 00000446 EB EA                           	JMP	L66
   404                                          [SECTION .data]
   405 00000002                                 LC1:
   406 00000002 6D 65 6D 00                     	DB	"mem",0x00
   407 00000006                                 LC2:
   408 00000006 63 6C 65 61 72 00               	DB	"clear",0x00
   409 0000000C                                 LC3:
   410 0000000C 6C 73 00                        	DB	"ls",0x00
   411 0000000F                                 LC4:
   412 0000000F 63 61 74 20 00                  	DB	"cat ",0x00
   413 00000014                                 LC5:
   414 00000014 42 61 64 20 43 6F 6D 6D 61 6E   	DB	"Bad Command.",0x0A,0x0A,0x00
       0000001E 64 2E 0A 0A 00 
   415                                          [SECTION .text]
   416 00000448                                 	GLOBAL	_console_runcmd
   417 00000448                                 _console_runcmd:
   418 00000448 55                              	PUSH	EBP
   419 00000449 89 E5                           	MOV	EBP,ESP
   420 0000044B 57                              	PUSH	EDI
   421 0000044C 56                              	PUSH	ESI
   422 0000044D BE [00000002]                   	MOV	ESI,LC1
   423 00000452 53                              	PUSH	EBX
   424 00000453 83 EC 0C                        	SUB	ESP,12
   425 00000456 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   426 00000459 8B 4D 10                        	MOV	ECX,DWORD [16+EBP]
   427 0000045C 89 45 E8                        	MOV	DWORD [-24+EBP],EAX
   428 0000045F 89 4D F0                        	MOV	DWORD [-16+EBP],ECX
   429 00000462 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
   430 00000465 8B 7D E8                        	MOV	EDI,DWORD [-24+EBP]
   431 00000468 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   432 0000046B 8B 5D 08                        	MOV	EBX,DWORD [8+EBP]
   433 0000046E B8 00000004                     	MOV	EAX,4
   434 00000473 FC                              	CLD
   435 00000474 89 C1                           	MOV	ECX,EAX
   436 00000476 F3                              	REPE
   437 00000477 A6                              	CMPSB
   438 00000478 0F 84 000000AD                  	JE	L88
   439 0000047E B8 00000006                     	MOV	EAX,6
   440 00000483 BE [00000006]                   	MOV	ESI,LC2
   441 00000488 FC                              	CLD
   442 00000489 8B 7D E8                        	MOV	EDI,DWORD [-24+EBP]
   443 0000048C 89 C1                           	MOV	ECX,EAX
   444 0000048E F3                              	REPE
   445 0000048F A6                              	CMPSB
   446 00000490 0F 84 00000089                  	JE	L89
   447 00000496 B8 00000003                     	MOV	EAX,3
   448 0000049B BE [0000000C]                   	MOV	ESI,LC3
   449 000004A0 FC                              	CLD
   450 000004A1 8B 7D E8                        	MOV	EDI,DWORD [-24+EBP]
   451 000004A4 89 C1                           	MOV	ECX,EAX
   452 000004A6 F3                              	REPE
   453 000004A7 A6                              	CMPSB
   454 000004A8 74 66                           	JE	L90
   455 000004AA B8 00000004                     	MOV	EAX,4
   456 000004AF BE [0000000F]                   	MOV	ESI,LC4
   457 000004B4 FC                              	CLD
   458 000004B5 8B 7D E8                        	MOV	EDI,DWORD [-24+EBP]
   459 000004B8 89 C1                           	MOV	ECX,EAX
   460 000004BA F3                              	REPE
   461 000004BB A6                              	CMPSB
   462 000004BC 74 37                           	JE	L91
   463 000004BE 8B 45 E8                        	MOV	EAX,DWORD [-24+EBP]
   464 000004C1 80 38 00                        	CMP	BYTE [EAX],0
   465 000004C4 75 08                           	JNE	L92
   466 000004C6                                 L77:
   467 000004C6 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   468 000004C9 5B                              	POP	EBX
   469 000004CA 5E                              	POP	ESI
   470 000004CB 5F                              	POP	EDI
   471 000004CC 5D                              	POP	EBP
   472 000004CD C3                              	RET
   473 000004CE                                 L92:
   474 000004CE 50                              	PUSH	EAX
   475 000004CF FF 75 F0                        	PUSH	DWORD [-16+EBP]
   476 000004D2 53                              	PUSH	EBX
   477 000004D3 E8 0000021B                     	CALL	_cmd_app
   478 000004D8 83 C4 0C                        	ADD	ESP,12
   479 000004DB 85 C0                           	TEST	EAX,EAX
   480 000004DD 75 E7                           	JNE	L77
   481 000004DF C7 45 0C [00000014]             	MOV	DWORD [12+EBP],LC5
   482 000004E6 89 5D 08                        	MOV	DWORD [8+EBP],EBX
   483 000004E9 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   484 000004EC 5B                              	POP	EBX
   485 000004ED 5E                              	POP	ESI
   486 000004EE 5F                              	POP	EDI
   487 000004EF 5D                              	POP	EBP
   488 000004F0 E9 00000405                     	JMP	_console_putstr0
   489 000004F5                                 L91:
   490 000004F5 8B 45 E8                        	MOV	EAX,DWORD [-24+EBP]
   491 000004F8 8B 4D F0                        	MOV	ECX,DWORD [-16+EBP]
   492 000004FB 89 45 10                        	MOV	DWORD [16+EBP],EAX
   493 000004FE 89 4D 0C                        	MOV	DWORD [12+EBP],ECX
   494 00000501 89 5D 08                        	MOV	DWORD [8+EBP],EBX
   495 00000504 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   496 00000507 5B                              	POP	EBX
   497 00000508 5E                              	POP	ESI
   498 00000509 5F                              	POP	EDI
   499 0000050A 5D                              	POP	EBP
   500 0000050B E9 00000153                     	JMP	_cmd_cat
   501 00000510                                 L90:
   502 00000510 89 5D 08                        	MOV	DWORD [8+EBP],EBX
   503 00000513 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   504 00000516 5B                              	POP	EBX
   505 00000517 5E                              	POP	ESI
   506 00000518 5F                              	POP	EDI
   507 00000519 5D                              	POP	EBP
   508 0000051A E9 000000AE                     	JMP	_cmd_ls
   509 0000051F                                 L89:
   510 0000051F 89 5D 08                        	MOV	DWORD [8+EBP],EBX
   511 00000522 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   512 00000525 5B                              	POP	EBX
   513 00000526 5E                              	POP	ESI
   514 00000527 5F                              	POP	EDI
   515 00000528 5D                              	POP	EBP
   516 00000529 EB 49                           	JMP	_cmd_clear
   517 0000052B                                 L88:
   518 0000052B 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
   519 0000052E 89 45 0C                        	MOV	DWORD [12+EBP],EAX
   520 00000531 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   521 00000534 5B                              	POP	EBX
   522 00000535 5E                              	POP	ESI
   523 00000536 5F                              	POP	EDI
   524 00000537 5D                              	POP	EBP
   525 00000538 EB 00                           	JMP	_cmd_mem
   526                                          [SECTION .data]
   527 00000023                                 LC6:
   528 00000023 74 6F 74 61 6C 3A 20 25 64 4D   	DB	"total: %dMB",0x0A,"free:  %dKB",0x0A,0x0A,0x00
       0000002D 42 0A 66 72 65 65 3A 20 20 25 
       00000037 64 4B 42 0A 0A 00 
   529                                          [SECTION .text]
   530 0000053A                                 	GLOBAL	_cmd_mem
   531 0000053A                                 _cmd_mem:
   532 0000053A 55                              	PUSH	EBP
   533 0000053B 89 E5                           	MOV	EBP,ESP
   534 0000053D 53                              	PUSH	EBX
   535 0000053E 83 EC 40                        	SUB	ESP,64
   536 00000541 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   537 00000544 C1 EB 14                        	SHR	EBX,20
   538 00000547 68 003C0000                     	PUSH	3932160
   539 0000054C E8 [00000000]                   	CALL	_mem_mgr_total
   540 00000551 C1 E8 0A                        	SHR	EAX,10
   541 00000554 89 04 24                        	MOV	DWORD [ESP],EAX
   542 00000557 53                              	PUSH	EBX
   543 00000558 68 [00000023]                   	PUSH	LC6
   544 0000055D 8D 5D BC                        	LEA	EBX,DWORD [-68+EBP]
   545 00000560 53                              	PUSH	EBX
   546 00000561 E8 [00000000]                   	CALL	_sprintf
   547 00000566 53                              	PUSH	EBX
   548 00000567 FF 75 08                        	PUSH	DWORD [8+EBP]
   549 0000056A E8 0000038B                     	CALL	_console_putstr0
   550 0000056F 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   551 00000572 C9                              	LEAVE
   552 00000573 C3                              	RET
   553 00000574                                 	GLOBAL	_cmd_clear
   554 00000574                                 _cmd_clear:
   555 00000574 55                              	PUSH	EBP
   556 00000575 89 E5                           	MOV	EBP,ESP
   557 00000577 57                              	PUSH	EDI
   558 00000578 56                              	PUSH	ESI
   559 00000579 BE 0000001C                     	MOV	ESI,28
   560 0000057E 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
   561 00000581 53                              	PUSH	EBX
   562 00000582 8B 1F                           	MOV	EBX,DWORD [EDI]
   563 00000584                                 L104:
   564 00000584 B9 00000008                     	MOV	ECX,8
   565 00000589                                 L103:
   566 00000589 89 F0                           	MOV	EAX,ESI
   567 0000058B 8B 13                           	MOV	EDX,DWORD [EBX]
   568 0000058D 0F AF 43 04                     	IMUL	EAX,DWORD [4+EBX]
   569 00000591 8D 04 08                        	LEA	EAX,DWORD [EAX+ECX*1]
   570 00000594 41                              	INC	ECX
   571 00000595 81 F9 000000F7                  	CMP	ECX,247
   572 0000059B C6 04 10 00                     	MOV	BYTE [EAX+EDX*1],0
   573 0000059F 7E E8                           	JLE	L103
   574 000005A1 46                              	INC	ESI
   575 000005A2 81 FE 0000009B                  	CMP	ESI,155
   576 000005A8 7E DA                           	JLE	L104
   577 000005AA 68 0000009C                     	PUSH	156
   578 000005AF 68 000000F8                     	PUSH	248
   579 000005B4 6A 1C                           	PUSH	28
   580 000005B6 6A 08                           	PUSH	8
   581 000005B8 53                              	PUSH	EBX
   582 000005B9 E8 [00000000]                   	CALL	_layers_refresh
   583 000005BE C7 47 08 0000001C               	MOV	DWORD [8+EDI],28
   584 000005C5 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   585 000005C8 5B                              	POP	EBX
   586 000005C9 5E                              	POP	ESI
   587 000005CA 5F                              	POP	EDI
   588 000005CB 5D                              	POP	EBP
   589 000005CC C3                              	RET
   590                                          [SECTION .data]
   591 0000003D                                 LC7:
   592 0000003D 66 69 6C 65 6E 61 6D 65 2E 65   	DB	"filename.ext   %7d",0x0A,0x00
       00000047 78 74 20 20 20 25 37 64 0A 00 
   593                                          [SECTION .text]
   594 000005CD                                 	GLOBAL	_cmd_ls
   595 000005CD                                 _cmd_ls:
   596 000005CD 55                              	PUSH	EBP
   597 000005CE 89 E5                           	MOV	EBP,ESP
   598 000005D0 57                              	PUSH	EDI
   599 000005D1 56                              	PUSH	ESI
   600 000005D2 31 F6                           	XOR	ESI,ESI
   601 000005D4 53                              	PUSH	EBX
   602 000005D5 31 DB                           	XOR	EBX,EBX
   603 000005D7 83 EC 20                        	SUB	ESP,32
   604 000005DA 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
   605 000005DD                                 L122:
   606 000005DD 8A 83 00102600                  	MOV	AL,BYTE [1058304+EBX]
   607 000005E3 84 C0                           	TEST	AL,AL
   608 000005E5 74 19                           	JE	L111
   609 000005E7 3C E5                           	CMP	AL,-27
   610 000005E9 74 09                           	JE	L112
   611 000005EB F6 83 0010260B 18               	TEST	BYTE [1058315+EBX],24
   612 000005F2 74 1A                           	JE	L126
   613 000005F4                                 L112:
   614 000005F4 46                              	INC	ESI
   615 000005F5 83 C3 20                        	ADD	EBX,32
   616 000005F8 81 FE 000000DF                  	CMP	ESI,223
   617 000005FE 7E DD                           	JLE	L122
   618 00000600                                 L111:
   619 00000600 57                              	PUSH	EDI
   620 00000601 E8 FFFFFCE4                     	CALL	_console_newline
   621 00000606 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   622 00000609 5B                              	POP	EBX
   623 0000060A 5E                              	POP	ESI
   624 0000060B 5F                              	POP	EDI
   625 0000060C 5D                              	POP	EBP
   626 0000060D C3                              	RET
   627 0000060E                                 L126:
   628 0000060E FF B3 0010261C                  	PUSH	DWORD [1058332+EBX]
   629 00000614 68 [0000003D]                   	PUSH	LC7
   630 00000619 8D 45 D4                        	LEA	EAX,DWORD [-44+EBP]
   631 0000061C 50                              	PUSH	EAX
   632 0000061D E8 [00000000]                   	CALL	_sprintf
   633 00000622 8D 93 00102600                  	LEA	EDX,DWORD [1058304+EBX]
   634 00000628 31 C9                           	XOR	ECX,ECX
   635 0000062A 83 C4 0C                        	ADD	ESP,12
   636 0000062D                                 L121:
   637 0000062D 8A 02                           	MOV	AL,BYTE [EDX]
   638 0000062F 42                              	INC	EDX
   639 00000630 88 44 0D D4                     	MOV	BYTE [-44+EBP+ECX*1],AL
   640 00000634 41                              	INC	ECX
   641 00000635 83 F9 07                        	CMP	ECX,7
   642 00000638 7E F3                           	JLE	L121
   643 0000063A 8A 83 00102608                  	MOV	AL,BYTE [1058312+EBX]
   644 00000640 88 45 DD                        	MOV	BYTE [-35+EBP],AL
   645 00000643 8A 83 00102609                  	MOV	AL,BYTE [1058313+EBX]
   646 00000649 88 45 DE                        	MOV	BYTE [-34+EBP],AL
   647 0000064C 8A 83 0010260A                  	MOV	AL,BYTE [1058314+EBX]
   648 00000652 88 45 DF                        	MOV	BYTE [-33+EBP],AL
   649 00000655 8D 45 D4                        	LEA	EAX,DWORD [-44+EBP]
   650 00000658 50                              	PUSH	EAX
   651 00000659 57                              	PUSH	EDI
   652 0000065A E8 0000029B                     	CALL	_console_putstr0
   653 0000065F 58                              	POP	EAX
   654 00000660 5A                              	POP	EDX
   655 00000661 EB 91                           	JMP	L112
   656                                          [SECTION .data]
   657 00000051                                 LC8:
   658 00000051 46 69 6C 65 20 6E 6F 74 20 66   	DB	"File not found.",0x0A,0x00
       0000005B 6F 75 6E 64 2E 0A 00 
   659                                          [SECTION .text]
   660 00000663                                 	GLOBAL	_cmd_cat
   661 00000663                                 _cmd_cat:
   662 00000663 55                              	PUSH	EBP
   663 00000664 89 E5                           	MOV	EBP,ESP
   664 00000666 57                              	PUSH	EDI
   665 00000667 56                              	PUSH	ESI
   666 00000668 53                              	PUSH	EBX
   667 00000669 56                              	PUSH	ESI
   668 0000066A 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
   669 0000066D 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
   670 00000670 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   671 00000673 68 000000E0                     	PUSH	224
   672 00000678 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   673 0000067B 83 C0 04                        	ADD	EAX,4
   674 0000067E 50                              	PUSH	EAX
   675 0000067F 68 00102600                     	PUSH	1058304
   676 00000684 E8 [00000000]                   	CALL	_file_search
   677 00000689 83 C4 0C                        	ADD	ESP,12
   678 0000068C 89 C6                           	MOV	ESI,EAX
   679 0000068E 85 C0                           	TEST	EAX,EAX
   680 00000690 74 52                           	JE	L128
   681 00000692 FF 70 1C                        	PUSH	DWORD [28+EAX]
   682 00000695 68 003C0000                     	PUSH	3932160
   683 0000069A E8 [00000000]                   	CALL	_mem_mgr_alloc_4k
   684 0000069F 68 00103E00                     	PUSH	1064448
   685 000006A4 FF 75 F0                        	PUSH	DWORD [-16+EBP]
   686 000006A7 50                              	PUSH	EAX
   687 000006A8 89 C3                           	MOV	EBX,EAX
   688 000006AA FF 76 1C                        	PUSH	DWORD [28+ESI]
   689 000006AD 0F B7 46 1A                     	MOVZX	EAX,WORD [26+ESI]
   690 000006B1 50                              	PUSH	EAX
   691 000006B2 E8 [00000000]                   	CALL	_file_loadfile
   692 000006B7 FF 76 1C                        	PUSH	DWORD [28+ESI]
   693 000006BA 53                              	PUSH	EBX
   694 000006BB 57                              	PUSH	EDI
   695 000006BC E8 00000267                     	CALL	_console_putstr1
   696 000006C1 83 C4 28                        	ADD	ESP,40
   697 000006C4 FF 76 1C                        	PUSH	DWORD [28+ESI]
   698 000006C7 53                              	PUSH	EBX
   699 000006C8 68 003C0000                     	PUSH	3932160
   700 000006CD E8 [00000000]                   	CALL	_mem_mgr_free_4k
   701 000006D2 83 C4 0C                        	ADD	ESP,12
   702 000006D5                                 L129:
   703 000006D5 89 7D 08                        	MOV	DWORD [8+EBP],EDI
   704 000006D8 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   705 000006DB 5B                              	POP	EBX
   706 000006DC 5E                              	POP	ESI
   707 000006DD 5F                              	POP	EDI
   708 000006DE 5D                              	POP	EBP
   709 000006DF E9 FFFFFC06                     	JMP	_console_newline
   710 000006E4                                 L128:
   711 000006E4 68 [00000051]                   	PUSH	LC8
   712 000006E9 57                              	PUSH	EDI
   713 000006EA E8 0000020B                     	CALL	_console_putstr0
   714 000006EF 59                              	POP	ECX
   715 000006F0 5B                              	POP	EBX
   716 000006F1 EB E2                           	JMP	L129
   717                                          [SECTION .data]
   718 00000062                                 LC9:
   719 00000062 48 61 72 69 00                  	DB	"Hari",0x00
   720 00000067                                 LC10:
   721 00000067 2E 74 6F 79 20 66 69 6C 65 20   	DB	".toy file format error.",0x0A,0x00
       00000071 66 6F 72 6D 61 74 20 65 72 72 
       0000007B 6F 72 2E 0A 00 
   722                                          [SECTION .text]
   723 000006F3                                 	GLOBAL	_cmd_app
   724 000006F3                                 _cmd_app:
   725 000006F3 55                              	PUSH	EBP
   726 000006F4 89 E5                           	MOV	EBP,ESP
   727 000006F6 57                              	PUSH	EDI
   728 000006F7 56                              	PUSH	ESI
   729 000006F8 53                              	PUSH	EBX
   730 000006F9 31 DB                           	XOR	EBX,EBX
   731 000006FB 83 EC 38                        	SUB	ESP,56
   732 000006FE 8B 75 10                        	MOV	ESI,DWORD [16+EBP]
   733 00000701 E8 [00000000]                   	CALL	_task_now
   734 00000706 89 45 C8                        	MOV	DWORD [-56+EBP],EAX
   735 00000709                                 L136:
   736 00000709 8A 04 33                        	MOV	AL,BYTE [EBX+ESI*1]
   737 0000070C 3C 20                           	CMP	AL,32
   738 0000070E 7E 0A                           	JLE	L132
   739 00000710 88 44 1D D4                     	MOV	BYTE [-44+EBP+EBX*1],AL
   740 00000714 43                              	INC	EBX
   741 00000715 83 FB 0C                        	CMP	EBX,12
   742 00000718 7E EF                           	JLE	L136
   743 0000071A                                 L132:
   744 0000071A 68 000000E0                     	PUSH	224
   745 0000071F 8D 75 D4                        	LEA	ESI,DWORD [-44+EBP]
   746 00000722 56                              	PUSH	ESI
   747 00000723 68 00102600                     	PUSH	1058304
   748 00000728 C6 44 1D D4 00                  	MOV	BYTE [-44+EBP+EBX*1],0
   749 0000072D E8 [00000000]                   	CALL	_file_search
   750 00000732 83 C4 0C                        	ADD	ESP,12
   751 00000735 85 C0                           	TEST	EAX,EAX
   752 00000737 89 45 D0                        	MOV	DWORD [-48+EBP],EAX
   753 0000073A 0F 84 00000173                  	JE	L158
   754 00000740                                 L157:
   755 00000740 8B 45 D0                        	MOV	EAX,DWORD [-48+EBP]
   756 00000743 FF 70 1C                        	PUSH	DWORD [28+EAX]
   757 00000746 68 003C0000                     	PUSH	3932160
   758 0000074B E8 [00000000]                   	CALL	_mem_mgr_alloc_4k
   759 00000750 8B 55 D0                        	MOV	EDX,DWORD [-48+EBP]
   760 00000753 68 00103E00                     	PUSH	1064448
   761 00000758 FF 75 0C                        	PUSH	DWORD [12+EBP]
   762 0000075B 50                              	PUSH	EAX
   763 0000075C 89 45 BC                        	MOV	DWORD [-68+EBP],EAX
   764 0000075F FF 72 1C                        	PUSH	DWORD [28+EDX]
   765 00000762 0F B7 42 1A                     	MOVZX	EAX,WORD [26+EDX]
   766 00000766 50                              	PUSH	EAX
   767 00000767 E8 [00000000]                   	CALL	_file_loadfile
   768 0000076C 8B 7D D0                        	MOV	EDI,DWORD [-48+EBP]
   769 0000076F 83 C4 1C                        	ADD	ESP,28
   770 00000772 83 7F 1C 23                     	CMP	DWORD [28+EDI],35
   771 00000776 76 1F                           	JBE	L139
   772 00000778 8B 75 BC                        	MOV	ESI,DWORD [-68+EBP]
   773 0000077B B8 [00000062]                   	MOV	EAX,LC9
   774 00000780 FC                              	CLD
   775 00000781 83 C6 04                        	ADD	ESI,4
   776 00000784 B9 00000004                     	MOV	ECX,4
   777 00000789 89 C7                           	MOV	EDI,EAX
   778 0000078B F3                              	REPE
   779 0000078C A6                              	CMPSB
   780 0000078D 75 08                           	JNE	L139
   781 0000078F 8B 45 BC                        	MOV	EAX,DWORD [-68+EBP]
   782 00000792 80 38 00                        	CMP	BYTE [EAX],0
   783 00000795 74 37                           	JE	L159
   784 00000797                                 L139:
   785 00000797 68 [00000067]                   	PUSH	LC10
   786 0000079C FF 75 08                        	PUSH	DWORD [8+EBP]
   787 0000079F E8 00000156                     	CALL	_console_putstr0
   788 000007A4 5F                              	POP	EDI
   789 000007A5 58                              	POP	EAX
   790 000007A6                                 L151:
   791 000007A6 8B 55 D0                        	MOV	EDX,DWORD [-48+EBP]
   792 000007A9 FF 72 1C                        	PUSH	DWORD [28+EDX]
   793 000007AC FF 75 BC                        	PUSH	DWORD [-68+EBP]
   794 000007AF 68 003C0000                     	PUSH	3932160
   795 000007B4 E8 [00000000]                   	CALL	_mem_mgr_free_4k
   796 000007B9 FF 75 08                        	PUSH	DWORD [8+EBP]
   797 000007BC E8 FFFFFB29                     	CALL	_console_newline
   798 000007C1 B8 00000001                     	MOV	EAX,1
   799 000007C6                                 L130:
   800 000007C6 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   801 000007C9 5B                              	POP	EBX
   802 000007CA 5E                              	POP	ESI
   803 000007CB 5F                              	POP	EDI
   804 000007CC 5D                              	POP	EBP
   805 000007CD C3                              	RET
   806 000007CE                                 L159:
   807 000007CE 8B 10                           	MOV	EDX,DWORD [EAX]
   808 000007D0 8B 78 0C                        	MOV	EDI,DWORD [12+EAX]
   809 000007D3 8B 58 10                        	MOV	EBX,DWORD [16+EAX]
   810 000007D6 8B 70 14                        	MOV	ESI,DWORD [20+EAX]
   811 000007D9 52                              	PUSH	EDX
   812 000007DA 89 55 C4                        	MOV	DWORD [-60+EBP],EDX
   813 000007DD 68 003C0000                     	PUSH	3932160
   814 000007E2 89 7D C0                        	MOV	DWORD [-64+EBP],EDI
   815 000007E5 E8 [00000000]                   	CALL	_mem_mgr_alloc_4k
   816 000007EA 8B 55 D0                        	MOV	EDX,DWORD [-48+EBP]
   817 000007ED A3 00000FE8                     	MOV	DWORD [4072],EAX
   818 000007F2 68 000040FA                     	PUSH	16634
   819 000007F7 FF 75 BC                        	PUSH	DWORD [-68+EBP]
   820 000007FA 89 45 CC                        	MOV	DWORD [-52+EBP],EAX
   821 000007FD 8B 42 1C                        	MOV	EAX,DWORD [28+EDX]
   822 00000800 48                              	DEC	EAX
   823 00000801 50                              	PUSH	EAX
   824 00000802 68 00271F58                     	PUSH	2563928
   825 00000807 E8 [00000000]                   	CALL	_set_segment_descriptor
   826 0000080C 8B 45 C4                        	MOV	EAX,DWORD [-60+EBP]
   827 0000080F 68 000040F2                     	PUSH	16626
   828 00000814 48                              	DEC	EAX
   829 00000815 FF 75 CC                        	PUSH	DWORD [-52+EBP]
   830 00000818 50                              	PUSH	EAX
   831 00000819 68 00271F60                     	PUSH	2563936
   832 0000081E E8 [00000000]                   	CALL	_set_segment_descriptor
   833 00000823 83 C4 28                        	ADD	ESP,40
   834 00000826 85 DB                           	TEST	EBX,EBX
   835 00000828 7E 14                           	JLE	L154
   836 0000082A 89 F9                           	MOV	ECX,EDI
   837 0000082C 8B 7D BC                        	MOV	EDI,DWORD [-68+EBP]
   838 0000082F 03 4D CC                        	ADD	ECX,DWORD [-52+EBP]
   839 00000832 8D 14 37                        	LEA	EDX,DWORD [EDI+ESI*1]
   840 00000835                                 L144:
   841 00000835 8A 02                           	MOV	AL,BYTE [EDX]
   842 00000837 42                              	INC	EDX
   843 00000838 88 01                           	MOV	BYTE [ECX],AL
   844 0000083A 41                              	INC	ECX
   845 0000083B 4B                              	DEC	EBX
   846 0000083C 75 F7                           	JNE	L144
   847 0000083E                                 L154:
   848 0000083E 8B 45 C8                        	MOV	EAX,DWORD [-56+EBP]
   849 00000841 BB 000000FF                     	MOV	EBX,255
   850 00000846 83 C0 30                        	ADD	EAX,48
   851 00000849 50                              	PUSH	EAX
   852 0000084A 68 00001F60                     	PUSH	8032
   853 0000084F FF 75 C0                        	PUSH	DWORD [-64+EBP]
   854 00000852 68 00001F58                     	PUSH	8024
   855 00000857 6A 1B                           	PUSH	27
   856 00000859 E8 [00000000]                   	CALL	_start_user_app
   857 0000085E 8B 35 00000FE4                  	MOV	ESI,DWORD [4068]
   858 00000864 83 C4 14                        	ADD	ESP,20
   859 00000867 81 C6 00000414                  	ADD	ESI,1044
   860 0000086D                                 L150:
   861 0000086D 8B 46 1C                        	MOV	EAX,DWORD [28+ESI]
   862 00000870 83 E0 11                        	AND	EAX,17
   863 00000873 83 F8 11                        	CMP	EAX,17
   864 00000876 74 2A                           	JE	L160
   865 00000878                                 L147:
   866 00000878 83 C6 28                        	ADD	ESI,40
   867 0000087B 4B                              	DEC	EBX
   868 0000087C 79 EF                           	JNS	L150
   869 0000087E 8B 45 C8                        	MOV	EAX,DWORD [-56+EBP]
   870 00000881 83 C0 10                        	ADD	EAX,16
   871 00000884 50                              	PUSH	EAX
   872 00000885 E8 [00000000]                   	CALL	_timer_cancelall
   873 0000088A FF 75 C4                        	PUSH	DWORD [-60+EBP]
   874 0000088D FF 75 CC                        	PUSH	DWORD [-52+EBP]
   875 00000890 68 003C0000                     	PUSH	3932160
   876 00000895 E8 [00000000]                   	CALL	_mem_mgr_free_4k
   877 0000089A 83 C4 10                        	ADD	ESP,16
   878 0000089D E9 FFFFFF04                     	JMP	L151
   879 000008A2                                 L160:
   880 000008A2 8B 45 C8                        	MOV	EAX,DWORD [-56+EBP]
   881 000008A5 39 46 24                        	CMP	DWORD [36+ESI],EAX
   882 000008A8 75 CE                           	JNE	L147
   883 000008AA 56                              	PUSH	ESI
   884 000008AB E8 [00000000]                   	CALL	_layer_free
   885 000008B0 58                              	POP	EAX
   886 000008B1 EB C5                           	JMP	L147
   887 000008B3                                 L158:
   888 000008B3 80 7C 1D D3 2E                  	CMP	BYTE [-45+EBP+EBX*1],46
   889 000008B8 74 2F                           	JE	L137
   890 000008BA 68 000000E0                     	PUSH	224
   891 000008BF 56                              	PUSH	ESI
   892 000008C0 68 00102600                     	PUSH	1058304
   893 000008C5 C6 44 1D D4 2E                  	MOV	BYTE [-44+EBP+EBX*1],46
   894 000008CA C6 44 1D D5 74                  	MOV	BYTE [-43+EBP+EBX*1],116
   895 000008CF C6 44 1D D6 6F                  	MOV	BYTE [-42+EBP+EBX*1],111
   896 000008D4 C6 44 1D D7 79                  	MOV	BYTE [-41+EBP+EBX*1],121
   897 000008D9 C6 44 1D D8 00                  	MOV	BYTE [-40+EBP+EBX*1],0
   898 000008DE E8 [00000000]                   	CALL	_file_search
   899 000008E3 83 C4 0C                        	ADD	ESP,12
   900 000008E6 89 45 D0                        	MOV	DWORD [-48+EBP],EAX
   901 000008E9                                 L137:
   902 000008E9 83 7D D0 00                     	CMP	DWORD [-48+EBP],0
   903 000008ED 0F 85 FFFFFE4D                  	JNE	L157
   904 000008F3 31 C0                           	XOR	EAX,EAX
   905 000008F5 E9 FFFFFECC                     	JMP	L130
   906 000008FA                                 	GLOBAL	_console_putstr0
   907 000008FA                                 _console_putstr0:
   908 000008FA 55                              	PUSH	EBP
   909 000008FB 89 E5                           	MOV	EBP,ESP
   910 000008FD 56                              	PUSH	ESI
   911 000008FE 53                              	PUSH	EBX
   912 000008FF 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   913 00000902 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   914 00000905 80 3B 00                        	CMP	BYTE [EBX],0
   915 00000908 75 07                           	JNE	L166
   916 0000090A                                 L168:
   917 0000090A 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   918 0000090D 5B                              	POP	EBX
   919 0000090E 5E                              	POP	ESI
   920 0000090F 5D                              	POP	EBP
   921 00000910 C3                              	RET
   922 00000911                                 L166:
   923 00000911 6A 01                           	PUSH	1
   924 00000913 0F BE 03                        	MOVSX	EAX,BYTE [EBX]
   925 00000916 50                              	PUSH	EAX
   926 00000917 43                              	INC	EBX
   927 00000918 56                              	PUSH	ESI
   928 00000919 E8 FFFFFA87                     	CALL	_console_putchar
   929 0000091E 83 C4 0C                        	ADD	ESP,12
   930 00000921 80 3B 00                        	CMP	BYTE [EBX],0
   931 00000924 75 EB                           	JNE	L166
   932 00000926 EB E2                           	JMP	L168
   933 00000928                                 	GLOBAL	_console_putstr1
   934 00000928                                 _console_putstr1:
   935 00000928 55                              	PUSH	EBP
   936 00000929 89 E5                           	MOV	EBP,ESP
   937 0000092B 57                              	PUSH	EDI
   938 0000092C 56                              	PUSH	ESI
   939 0000092D 53                              	PUSH	EBX
   940 0000092E 8B 75 10                        	MOV	ESI,DWORD [16+EBP]
   941 00000931 31 DB                           	XOR	EBX,EBX
   942 00000933 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   943 00000936 39 F3                           	CMP	EBX,ESI
   944 00000938 7C 08                           	JL	L174
   945 0000093A                                 L176:
   946 0000093A 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   947 0000093D 5B                              	POP	EBX
   948 0000093E 5E                              	POP	ESI
   949 0000093F 5F                              	POP	EDI
   950 00000940 5D                              	POP	EBP
   951 00000941 C3                              	RET
   952 00000942                                 L174:
   953 00000942 6A 01                           	PUSH	1
   954 00000944 0F BE 04 3B                     	MOVSX	EAX,BYTE [EBX+EDI*1]
   955 00000948 50                              	PUSH	EAX
   956 00000949 43                              	INC	EBX
   957 0000094A FF 75 08                        	PUSH	DWORD [8+EBP]
   958 0000094D E8 FFFFFA53                     	CALL	_console_putchar
   959 00000952 83 C4 0C                        	ADD	ESP,12
   960 00000955 39 F3                           	CMP	EBX,ESI
   961 00000957 7C E9                           	JL	L174
   962 00000959 EB DF                           	JMP	L176
   963                                          [SECTION .data]
   964 00000080                                 LC11:
   965 00000080 0A 69 6E 74 20 30 63 20 3A 0A   	DB	0x0A,"int 0c :",0x0A," stack exception.",0x0A,0x00
       0000008A 20 73 74 61 63 6B 20 65 78 63 
       00000094 65 70 74 69 6F 6E 2E 0A 00 
   966 0000009D                                 LC12:
   967 0000009D 45 49 50 20 3D 20 25 30 38 58   	DB	"EIP = %08X",0x0A,0x00
       000000A7 0A 00 
   968                                          [SECTION .text]
   969 0000095B                                 	GLOBAL	_interrupt_handler0c
   970 0000095B                                 _interrupt_handler0c:
   971 0000095B 55                              	PUSH	EBP
   972 0000095C 89 E5                           	MOV	EBP,ESP
   973 0000095E 57                              	PUSH	EDI
   974 0000095F 56                              	PUSH	ESI
   975 00000960 53                              	PUSH	EBX
   976 00000961 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
   977 00000964 83 EC 20                        	SUB	ESP,32
   978 00000967 8B 3D 00000FEC                  	MOV	EDI,DWORD [4076]
   979 0000096D E8 [00000000]                   	CALL	_task_now
   980 00000972 68 [00000080]                   	PUSH	LC11
   981 00000977 89 C6                           	MOV	ESI,EAX
   982 00000979 57                              	PUSH	EDI
   983 0000097A 83 C6 30                        	ADD	ESI,48
   984 0000097D E8 FFFFFF78                     	CALL	_console_putstr0
   985 00000982 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   986 00000985 FF 70 2C                        	PUSH	DWORD [44+EAX]
   987 00000988 68 [0000009D]                   	PUSH	LC12
   988 0000098D 53                              	PUSH	EBX
   989 0000098E E8 [00000000]                   	CALL	_sprintf
   990 00000993 53                              	PUSH	EBX
   991 00000994 57                              	PUSH	EDI
   992 00000995 E8 FFFFFF60                     	CALL	_console_putstr0
   993 0000099A 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   994 0000099D 5B                              	POP	EBX
   995 0000099E 89 F0                           	MOV	EAX,ESI
   996 000009A0 5E                              	POP	ESI
   997 000009A1 5F                              	POP	EDI
   998 000009A2 5D                              	POP	EBP
   999 000009A3 C3                              	RET
  1000                                          [SECTION .data]
  1001 000000A9                                 LC13:
  1002 000000A9 0A 69 6E 74 20 30 64 20 3A 0A   	DB	0x0A,"int 0d :",0x0A," General protected exception.",0x0A,0x00
       000000B3 20 47 65 6E 65 72 61 6C 20 70 
       000000BD 72 6F 74 65 63 74 65 64 20 65 
       000000C7 78 63 65 70 74 69 6F 6E 2E 0A 
       000000D1 00 
  1003                                          [SECTION .text]
  1004 000009A4                                 	GLOBAL	_interrupt_handler0d
  1005 000009A4                                 _interrupt_handler0d:
  1006 000009A4 55                              	PUSH	EBP
  1007 000009A5 89 E5                           	MOV	EBP,ESP
  1008 000009A7 57                              	PUSH	EDI
  1009 000009A8 56                              	PUSH	ESI
  1010 000009A9 53                              	PUSH	EBX
  1011 000009AA 8D 5D D4                        	LEA	EBX,DWORD [-44+EBP]
  1012 000009AD 83 EC 20                        	SUB	ESP,32
  1013 000009B0 8B 3D 00000FEC                  	MOV	EDI,DWORD [4076]
  1014 000009B6 E8 [00000000]                   	CALL	_task_now
  1015 000009BB 68 [000000A9]                   	PUSH	LC13
  1016 000009C0 89 C6                           	MOV	ESI,EAX
  1017 000009C2 57                              	PUSH	EDI
  1018 000009C3 83 C6 30                        	ADD	ESI,48
  1019 000009C6 E8 FFFFFF2F                     	CALL	_console_putstr0
  1020 000009CB 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
  1021 000009CE FF 70 2C                        	PUSH	DWORD [44+EAX]
  1022 000009D1 68 [0000009D]                   	PUSH	LC12
  1023 000009D6 53                              	PUSH	EBX
  1024 000009D7 E8 [00000000]                   	CALL	_sprintf
  1025 000009DC 53                              	PUSH	EBX
  1026 000009DD 57                              	PUSH	EDI
  1027 000009DE E8 FFFFFF17                     	CALL	_console_putstr0
  1028 000009E3 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
  1029 000009E6 5B                              	POP	EBX
  1030 000009E7 89 F0                           	MOV	EAX,ESI
  1031 000009E9 5E                              	POP	ESI
  1032 000009EA 5F                              	POP	EDI
  1033 000009EB 5D                              	POP	EBP
  1034 000009EC C3                              	RET
  1035 000009ED                                 	GLOBAL	_toy_api_drawline
  1036 000009ED                                 _toy_api_drawline:
  1037 000009ED 55                              	PUSH	EBP
  1038 000009EE 89 E5                           	MOV	EBP,ESP
  1039 000009F0 57                              	PUSH	EDI
  1040 000009F1 56                              	PUSH	ESI
  1041 000009F2 53                              	PUSH	EBX
  1042 000009F3 83 EC 0C                        	SUB	ESP,12
  1043 000009F6 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
  1044 000009F9 8B 45 14                        	MOV	EAX,DWORD [20+EBP]
  1045 000009FC 89 D9                           	MOV	ECX,EBX
  1046 000009FE 8B 55 18                        	MOV	EDX,DWORD [24+EBP]
  1047 00000A01 C1 E1 0A                        	SAL	ECX,10
  1048 00000A04 89 D7                           	MOV	EDI,EDX
  1049 00000A06 89 4D F0                        	MOV	DWORD [-16+EBP],ECX
  1050 00000A09 89 C6                           	MOV	ESI,EAX
  1051 00000A0B 8B 4D 10                        	MOV	ECX,DWORD [16+EBP]
  1052 00000A0E 2B 7D 10                        	SUB	EDI,DWORD [16+EBP]
  1053 00000A11 C1 E1 0A                        	SAL	ECX,10
  1054 00000A14 29 DE                           	SUB	ESI,EBX
  1055 00000A16 89 4D EC                        	MOV	DWORD [-20+EBP],ECX
  1056 00000A19 0F 88 000000A3                  	JS	L201
  1057 00000A1F                                 L180:
  1058 00000A1F 85 FF                           	TEST	EDI,EDI
  1059 00000A21 0F 88 00000094                  	JS	L202
  1060 00000A27                                 L181:
  1061 00000A27 39 FE                           	CMP	ESI,EDI
  1062 00000A29 7C 62                           	JL	L182
  1063 00000A2B 8D 4E 01                        	LEA	ECX,DWORD [1+ESI]
  1064 00000A2E 39 C3                           	CMP	EBX,EAX
  1065 00000A30 BE FFFFFC00                     	MOV	ESI,-1024
  1066 00000A35 7F 05                           	JG	L184
  1067 00000A37 BE 00000400                     	MOV	ESI,1024
  1068 00000A3C                                 L184:
  1069 00000A3C 39 55 10                        	CMP	DWORD [16+EBP],EDX
  1070 00000A3F 7F 46                           	JG	L185
  1071 00000A41 2B 55 10                        	SUB	EDX,DWORD [16+EBP]
  1072 00000A44 42                              	INC	EDX
  1073 00000A45                                 L200:
  1074 00000A45 C1 E2 0A                        	SAL	EDX,10
  1075 00000A48 89 D0                           	MOV	EAX,EDX
  1076 00000A4A 99                              	CDQ
  1077 00000A4B F7 F9                           	IDIV	ECX
  1078 00000A4D 89 C7                           	MOV	EDI,EAX
  1079 00000A4F                                 L187:
  1080 00000A4F 85 C9                           	TEST	ECX,ECX
  1081 00000A51 7E 2C                           	JLE	L198
  1082 00000A53 89 CB                           	MOV	EBX,ECX
  1083 00000A55                                 L196:
  1084 00000A55 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
  1085 00000A58 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
  1086 00000A5B C1 F8 0A                        	SAR	EAX,10
  1087 00000A5E 8B 4D F0                        	MOV	ECX,DWORD [-16+EBP]
  1088 00000A61 0F AF 42 04                     	IMUL	EAX,DWORD [4+EDX]
  1089 00000A65 C1 F9 0A                        	SAR	ECX,10
  1090 00000A68 89 4D E8                        	MOV	DWORD [-24+EBP],ECX
  1091 00000A6B 8B 0A                           	MOV	ECX,DWORD [EDX]
  1092 00000A6D 03 45 E8                        	ADD	EAX,DWORD [-24+EBP]
  1093 00000A70 8A 55 1C                        	MOV	DL,BYTE [28+EBP]
  1094 00000A73 88 14 08                        	MOV	BYTE [EAX+ECX*1],DL
  1095 00000A76 01 75 F0                        	ADD	DWORD [-16+EBP],ESI
  1096 00000A79 01 7D EC                        	ADD	DWORD [-20+EBP],EDI
  1097 00000A7C 4B                              	DEC	EBX
  1098 00000A7D 75 D6                           	JNE	L196
  1099 00000A7F                                 L198:
  1100 00000A7F 83 C4 0C                        	ADD	ESP,12
  1101 00000A82 5B                              	POP	EBX
  1102 00000A83 5E                              	POP	ESI
  1103 00000A84 5F                              	POP	EDI
  1104 00000A85 5D                              	POP	EBP
  1105 00000A86 C3                              	RET
  1106 00000A87                                 L185:
  1107 00000A87 2B 55 10                        	SUB	EDX,DWORD [16+EBP]
  1108 00000A8A 4A                              	DEC	EDX
  1109 00000A8B EB B8                           	JMP	L200
  1110 00000A8D                                 L182:
  1111 00000A8D 8D 4F 01                        	LEA	ECX,DWORD [1+EDI]
  1112 00000A90 39 55 10                        	CMP	DWORD [16+EBP],EDX
  1113 00000A93 BF FFFFFC00                     	MOV	EDI,-1024
  1114 00000A98 7F 05                           	JG	L189
  1115 00000A9A BF 00000400                     	MOV	EDI,1024
  1116 00000A9F                                 L189:
  1117 00000A9F 39 C3                           	CMP	EBX,EAX
  1118 00000AA1 7F 11                           	JG	L190
  1119 00000AA3 29 D8                           	SUB	EAX,EBX
  1120 00000AA5 8D 50 01                        	LEA	EDX,DWORD [1+EAX]
  1121 00000AA8                                 L199:
  1122 00000AA8 C1 E2 0A                        	SAL	EDX,10
  1123 00000AAB 89 D0                           	MOV	EAX,EDX
  1124 00000AAD 99                              	CDQ
  1125 00000AAE F7 F9                           	IDIV	ECX
  1126 00000AB0 89 C6                           	MOV	ESI,EAX
  1127 00000AB2 EB 9B                           	JMP	L187
  1128 00000AB4                                 L190:
  1129 00000AB4 29 D8                           	SUB	EAX,EBX
  1130 00000AB6 8D 50 FF                        	LEA	EDX,DWORD [-1+EAX]
  1131 00000AB9 EB ED                           	JMP	L199
  1132 00000ABB                                 L202:
  1133 00000ABB F7 DF                           	NEG	EDI
  1134 00000ABD E9 FFFFFF65                     	JMP	L181
  1135 00000AC2                                 L201:
  1136 00000AC2 F7 DE                           	NEG	ESI
  1137 00000AC4 E9 FFFFFF56                     	JMP	L180
  1138 00000AC9                                 	GLOBAL	_toy_api
  1139 00000AC9                                 _toy_api:
  1140 00000AC9 55                              	PUSH	EBP
  1141 00000ACA 89 E5                           	MOV	EBP,ESP
  1142 00000ACC 57                              	PUSH	EDI
  1143 00000ACD 56                              	PUSH	ESI
  1144 00000ACE 53                              	PUSH	EBX
  1145 00000ACF 50                              	PUSH	EAX
  1146 00000AD0 8B 5D 18                        	MOV	EBX,DWORD [24+EBP]
  1147 00000AD3 8B 3D 00000FE8                  	MOV	EDI,DWORD [4072]
  1148 00000AD9 E8 [00000000]                   	CALL	_task_now
  1149 00000ADE 8B 15 00000FE4                  	MOV	EDX,DWORD [4068]
  1150 00000AE4 8B 35 00000FEC                  	MOV	ESI,DWORD [4076]
  1151 00000AEA 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
  1152 00000AED 8B 45 1C                        	MOV	EAX,DWORD [28+EBP]
  1153 00000AF0 48                              	DEC	EAX
  1154 00000AF1 83 F8 12                        	CMP	EAX,18
  1155 00000AF4 77 17                           	JA	L204
  1156 00000AF6 FF 24 85 [000000D4]             	JMP	DWORD [L238+EAX*4]
  1157                                          [SECTION .data]
  1158 000000D2 00 00                           	ALIGNB	4
  1159 000000D4                                 L238:
  1160 000000D4 [00000AFD]                      	DD	L205
  1161 000000D8 [00000B17]                      	DD	L206
  1162 000000DC [00000B25]                      	DD	L207
  1163 000000E0 [00000B34]                      	DD	L208
  1164 000000E4 [00000B3C]                      	DD	L209
  1165 000000E8 [00000B94]                      	DD	L210
  1166 000000EC [00000BDD]                      	DD	L212
  1167 000000F0 [00000C1B]                      	DD	L214
  1168 000000F4 [00000C3B]                      	DD	L215
  1169 000000F8 [00000C56]                      	DD	L216
  1170 000000FC [00000C71]                      	DD	L217
  1171 00000100 [00000CA6]                      	DD	L219
  1172 00000104 [00000CB8]                      	DD	L220
  1173 00000108 [00000CDA]                      	DD	L222
  1174 0000010C [00000CE6]                      	DD	L224
  1175 00000110 [00000D81]                      	DD	L234
  1176 00000114 [00000D92]                      	DD	L235
  1177 00000118 [00000DAD]                      	DD	L236
  1178 0000011C [00000DBB]                      	DD	L237
  1179                                          [SECTION .text]
  1180 00000AFD                                 L205:
  1181 00000AFD 6A 01                           	PUSH	1
  1182 00000AFF 0F B6 45 24                     	MOVZX	EAX,BYTE [36+EBP]
  1183 00000B03 50                              	PUSH	EAX
  1184 00000B04 56                              	PUSH	ESI
  1185 00000B05 E8 FFFFF89B                     	CALL	_console_putchar
  1186 00000B0A                                 L242:
  1187 00000B0A 83 C4 0C                        	ADD	ESP,12
  1188 00000B0D                                 L204:
  1189 00000B0D 31 C0                           	XOR	EAX,EAX
  1190 00000B0F                                 L203:
  1191 00000B0F 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
  1192 00000B12 5B                              	POP	EBX
  1193 00000B13 5E                              	POP	ESI
  1194 00000B14 5F                              	POP	EDI
  1195 00000B15 5D                              	POP	EBP
  1196 00000B16 C3                              	RET
  1197 00000B17                                 L206:
  1198 00000B17 8D 04 1F                        	LEA	EAX,DWORD [EDI+EBX*1]
  1199 00000B1A 50                              	PUSH	EAX
  1200 00000B1B 56                              	PUSH	ESI
  1201 00000B1C E8 FFFFFDD9                     	CALL	_console_putstr0
  1202 00000B21                                 L243:
  1203 00000B21 58                              	POP	EAX
  1204 00000B22 5A                              	POP	EDX
  1205 00000B23 EB E8                           	JMP	L204
  1206 00000B25                                 L207:
  1207 00000B25 FF 75 20                        	PUSH	DWORD [32+EBP]
  1208 00000B28 8D 04 1F                        	LEA	EAX,DWORD [EDI+EBX*1]
  1209 00000B2B 50                              	PUSH	EAX
  1210 00000B2C 56                              	PUSH	ESI
  1211 00000B2D E8 FFFFFDF6                     	CALL	_console_putstr1
  1212 00000B32 EB D6                           	JMP	L242
  1213 00000B34                                 L208:
  1214 00000B34 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
  1215 00000B37 83 C0 30                        	ADD	EAX,48
  1216 00000B3A EB D3                           	JMP	L203
  1217 00000B3C                                 L209:
  1218 00000B3C 52                              	PUSH	EDX
  1219 00000B3D 01 FB                           	ADD	EBX,EDI
  1220 00000B3F E8 [00000000]                   	CALL	_layer_alloc
  1221 00000B44 89 C6                           	MOV	ESI,EAX
  1222 00000B46 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
  1223 00000B49 89 46 24                        	MOV	DWORD [36+ESI],EAX
  1224 00000B4C 83 4E 1C 10                     	OR	DWORD [28+ESI],16
  1225 00000B50 FF 75 24                        	PUSH	DWORD [36+EBP]
  1226 00000B53 FF 75 08                        	PUSH	DWORD [8+EBP]
  1227 00000B56 FF 75 0C                        	PUSH	DWORD [12+EBP]
  1228 00000B59 53                              	PUSH	EBX
  1229 00000B5A 56                              	PUSH	ESI
  1230 00000B5B E8 [00000000]                   	CALL	_layer_setbuf
  1231 00000B60 8B 45 20                        	MOV	EAX,DWORD [32+EBP]
  1232 00000B63 6A 00                           	PUSH	0
  1233 00000B65 01 F8                           	ADD	EAX,EDI
  1234 00000B67 50                              	PUSH	EAX
  1235 00000B68 FF 75 08                        	PUSH	DWORD [8+EBP]
  1236 00000B6B FF 75 0C                        	PUSH	DWORD [12+EBP]
  1237 00000B6E 53                              	PUSH	EBX
  1238 00000B6F E8 [00000000]                   	CALL	_make_window8
  1239 00000B74 83 C4 2C                        	ADD	ESP,44
  1240 00000B77 6A 32                           	PUSH	50
  1241 00000B79 6A 64                           	PUSH	100
  1242 00000B7B 56                              	PUSH	ESI
  1243 00000B7C E8 [00000000]                   	CALL	_layer_slide
  1244 00000B81 6A 03                           	PUSH	3
  1245 00000B83 56                              	PUSH	ESI
  1246 00000B84 E8 [00000000]                   	CALL	_layer_updown
  1247 00000B89 89 75 44                        	MOV	DWORD [68+EBP],ESI
  1248 00000B8C                                 L244:
  1249 00000B8C 83 C4 14                        	ADD	ESP,20
  1250 00000B8F E9 FFFFFF79                     	JMP	L204
  1251 00000B94                                 L210:
  1252 00000B94 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
  1253 00000B97 89 DE                           	MOV	ESI,EBX
  1254 00000B99 01 F8                           	ADD	EAX,EDI
  1255 00000B9B 83 E6 FE                        	AND	ESI,-2
  1256 00000B9E 50                              	PUSH	EAX
  1257 00000B9F 0F BE 45 24                     	MOVSX	EAX,BYTE [36+EBP]
  1258 00000BA3 50                              	PUSH	EAX
  1259 00000BA4 FF 75 08                        	PUSH	DWORD [8+EBP]
  1260 00000BA7 FF 75 0C                        	PUSH	DWORD [12+EBP]
  1261 00000BAA FF 76 04                        	PUSH	DWORD [4+ESI]
  1262 00000BAD FF 36                           	PUSH	DWORD [ESI]
  1263 00000BAF E8 [00000000]                   	CALL	_draw_font8_asc
  1264 00000BB4 83 C4 18                        	ADD	ESP,24
  1265 00000BB7 83 E3 01                        	AND	EBX,1
  1266 00000BBA 0F 85 FFFFFF4D                  	JNE	L204
  1267 00000BC0 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
  1268 00000BC3 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
  1269 00000BC6 8B 55 20                        	MOV	EDX,DWORD [32+EBP]
  1270 00000BC9 83 C0 10                        	ADD	EAX,16
  1271 00000BCC 50                              	PUSH	EAX
  1272 00000BCD 8D 04 D1                        	LEA	EAX,DWORD [ECX+EDX*8]
  1273 00000BD0 50                              	PUSH	EAX
  1274 00000BD1 FF 75 08                        	PUSH	DWORD [8+EBP]
  1275 00000BD4 51                              	PUSH	ECX
  1276 00000BD5                                 L245:
  1277 00000BD5 56                              	PUSH	ESI
  1278 00000BD6                                 L241:
  1279 00000BD6 E8 [00000000]                   	CALL	_layers_refresh
  1280 00000BDB EB AF                           	JMP	L244
  1281 00000BDD                                 L212:
  1282 00000BDD FF 75 08                        	PUSH	DWORD [8+EBP]
  1283 00000BE0 FF 75 0C                        	PUSH	DWORD [12+EBP]
  1284 00000BE3 FF 75 20                        	PUSH	DWORD [32+EBP]
  1285 00000BE6 89 DE                           	MOV	ESI,EBX
  1286 00000BE8 FF 75 24                        	PUSH	DWORD [36+EBP]
  1287 00000BEB 83 E6 FE                        	AND	ESI,-2
  1288 00000BEE 0F B6 45 10                     	MOVZX	EAX,BYTE [16+EBP]
  1289 00000BF2 50                              	PUSH	EAX
  1290 00000BF3 FF 76 04                        	PUSH	DWORD [4+ESI]
  1291 00000BF6 FF 36                           	PUSH	DWORD [ESI]
  1292 00000BF8 E8 [00000000]                   	CALL	_fill_box8
  1293 00000BFD 83 C4 1C                        	ADD	ESP,28
  1294 00000C00                                 L247:
  1295 00000C00 83 E3 01                        	AND	EBX,1
  1296 00000C03 0F 85 FFFFFF04                  	JNE	L204
  1297 00000C09 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
  1298 00000C0C 40                              	INC	EAX
  1299 00000C0D 50                              	PUSH	EAX
  1300 00000C0E 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
  1301 00000C11 40                              	INC	EAX
  1302 00000C12 50                              	PUSH	EAX
  1303 00000C13 FF 75 20                        	PUSH	DWORD [32+EBP]
  1304 00000C16 FF 75 24                        	PUSH	DWORD [36+EBP]
  1305 00000C19 EB BA                           	JMP	L245
  1306 00000C1B                                 L214:
  1307 00000C1B 01 FB                           	ADD	EBX,EDI
  1308 00000C1D 53                              	PUSH	EBX
  1309 00000C1E E8 [00000000]                   	CALL	_mem_mgr_init
  1310 00000C23 83 65 20 F0                     	AND	DWORD [32+EBP],-16
  1311 00000C27 FF 75 20                        	PUSH	DWORD [32+EBP]
  1312 00000C2A FF 75 24                        	PUSH	DWORD [36+EBP]
  1313 00000C2D 53                              	PUSH	EBX
  1314 00000C2E E8 [00000000]                   	CALL	_mem_mgr_free
  1315 00000C33 83 C4 10                        	ADD	ESP,16
  1316 00000C36 E9 FFFFFED2                     	JMP	L204
  1317 00000C3B                                 L215:
  1318 00000C3B 8B 45 20                        	MOV	EAX,DWORD [32+EBP]
  1319 00000C3E 83 C0 0F                        	ADD	EAX,15
  1320 00000C41 83 E0 F0                        	AND	EAX,-16
  1321 00000C44 50                              	PUSH	EAX
  1322 00000C45 8D 04 1F                        	LEA	EAX,DWORD [EDI+EBX*1]
  1323 00000C48 50                              	PUSH	EAX
  1324 00000C49 E8 [00000000]                   	CALL	_mem_mgr_alloc
  1325 00000C4E 89 45 44                        	MOV	DWORD [68+EBP],EAX
  1326 00000C51 E9 FFFFFECB                     	JMP	L243
  1327 00000C56                                 L216:
  1328 00000C56 8B 45 20                        	MOV	EAX,DWORD [32+EBP]
  1329 00000C59 83 C0 0F                        	ADD	EAX,15
  1330 00000C5C 83 E0 F0                        	AND	EAX,-16
  1331 00000C5F 50                              	PUSH	EAX
  1332 00000C60 8D 04 1F                        	LEA	EAX,DWORD [EDI+EBX*1]
  1333 00000C63 FF 75 24                        	PUSH	DWORD [36+EBP]
  1334 00000C66 50                              	PUSH	EAX
  1335 00000C67 E8 [00000000]                   	CALL	_mem_mgr_free
  1336 00000C6C E9 FFFFFE99                     	JMP	L242
  1337 00000C71                                 L217:
  1338 00000C71 89 DE                           	MOV	ESI,EBX
  1339 00000C73 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
  1340 00000C76 83 E6 FE                        	AND	ESI,-2
  1341 00000C79 8A 55 24                        	MOV	DL,BYTE [36+EBP]
  1342 00000C7C 0F AF 46 04                     	IMUL	EAX,DWORD [4+ESI]
  1343 00000C80 03 45 0C                        	ADD	EAX,DWORD [12+EBP]
  1344 00000C83 8B 0E                           	MOV	ECX,DWORD [ESI]
  1345 00000C85 83 E3 01                        	AND	EBX,1
  1346 00000C88 88 14 08                        	MOV	BYTE [EAX+ECX*1],DL
  1347 00000C8B 0F 85 FFFFFE7C                  	JNE	L204
  1348 00000C91 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
  1349 00000C94 40                              	INC	EAX
  1350 00000C95 50                              	PUSH	EAX
  1351 00000C96 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
  1352 00000C99 40                              	INC	EAX
  1353 00000C9A 50                              	PUSH	EAX
  1354 00000C9B FF 75 08                        	PUSH	DWORD [8+EBP]
  1355 00000C9E FF 75 0C                        	PUSH	DWORD [12+EBP]
  1356 00000CA1 E9 FFFFFF2F                     	JMP	L245
  1357 00000CA6                                 L219:
  1358 00000CA6 FF 75 08                        	PUSH	DWORD [8+EBP]
  1359 00000CA9 FF 75 0C                        	PUSH	DWORD [12+EBP]
  1360 00000CAC FF 75 20                        	PUSH	DWORD [32+EBP]
  1361 00000CAF FF 75 24                        	PUSH	DWORD [36+EBP]
  1362 00000CB2 53                              	PUSH	EBX
  1363 00000CB3 E9 FFFFFF1E                     	JMP	L241
  1364 00000CB8                                 L220:
  1365 00000CB8 FF 75 10                        	PUSH	DWORD [16+EBP]
  1366 00000CBB FF 75 08                        	PUSH	DWORD [8+EBP]
  1367 00000CBE FF 75 0C                        	PUSH	DWORD [12+EBP]
  1368 00000CC1 FF 75 20                        	PUSH	DWORD [32+EBP]
  1369 00000CC4 89 DE                           	MOV	ESI,EBX
  1370 00000CC6 FF 75 24                        	PUSH	DWORD [36+EBP]
  1371 00000CC9 83 E6 FE                        	AND	ESI,-2
  1372 00000CCC 56                              	PUSH	ESI
  1373 00000CCD E8 FFFFFD1B                     	CALL	_toy_api_drawline
  1374 00000CD2 83 C4 18                        	ADD	ESP,24
  1375 00000CD5 E9 FFFFFF26                     	JMP	L247
  1376 00000CDA                                 L222:
  1377 00000CDA 53                              	PUSH	EBX
  1378 00000CDB E8 [00000000]                   	CALL	_layer_free
  1379 00000CE0                                 L240:
  1380 00000CE0 58                              	POP	EAX
  1381 00000CE1 E9 FFFFFE27                     	JMP	L204
  1382 00000CE6                                 L224:
  1383 00000CE6 E8 [00000000]                   	CALL	_io_cli
  1384 00000CEB 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
  1385 00000CEE 83 C0 10                        	ADD	EAX,16
  1386 00000CF1 50                              	PUSH	EAX
  1387 00000CF2 E8 [00000000]                   	CALL	_fifo_size
  1388 00000CF7 5F                              	POP	EDI
  1389 00000CF8 85 C0                           	TEST	EAX,EAX
  1390 00000CFA 75 0F                           	JNE	L227
  1391 00000CFC 83 7D 24 00                     	CMP	DWORD [36+EBP],0
  1392 00000D00 74 6E                           	JE	L228
  1393 00000D02 FF 75 F0                        	PUSH	DWORD [-16+EBP]
  1394 00000D05 E8 [00000000]                   	CALL	_task_sleep
  1395 00000D0A 5B                              	POP	EBX
  1396 00000D0B                                 L227:
  1397 00000D0B 8B 7D F0                        	MOV	EDI,DWORD [-16+EBP]
  1398 00000D0E 83 C7 10                        	ADD	EDI,16
  1399 00000D11 57                              	PUSH	EDI
  1400 00000D12 E8 [00000000]                   	CALL	_fifo_get
  1401 00000D17 89 C3                           	MOV	EBX,EAX
  1402 00000D19 E8 [00000000]                   	CALL	_io_sti
  1403 00000D1E 59                              	POP	ECX
  1404 00000D1F 83 FB 01                        	CMP	EBX,1
  1405 00000D22 7E 32                           	JLE	L248
  1406 00000D24                                 L230:
  1407 00000D24 83 FB 02                        	CMP	EBX,2
  1408 00000D27 74 24                           	JE	L249
  1409 00000D29                                 L231:
  1410 00000D29 83 FB 03                        	CMP	EBX,3
  1411 00000D2C 74 16                           	JE	L250
  1412 00000D2E                                 L232:
  1413 00000D2E 81 FB 000000FF                  	CMP	EBX,255
  1414 00000D34 7E B0                           	JLE	L224
  1415 00000D36 8D 83 FFFFFF00                  	LEA	EAX,DWORD [-256+EBX]
  1416 00000D3C 89 45 44                        	MOV	DWORD [68+EBP],EAX
  1417 00000D3F E9 FFFFFDC9                     	JMP	L204
  1418 00000D44                                 L250:
  1419 00000D44 C7 46 0C FFFFFFFF               	MOV	DWORD [12+ESI],-1
  1420 00000D4B EB E1                           	JMP	L232
  1421 00000D4D                                 L249:
  1422 00000D4D C7 46 0C 00000007               	MOV	DWORD [12+ESI],7
  1423 00000D54 EB D3                           	JMP	L231
  1424 00000D56                                 L248:
  1425 00000D56 6A 01                           	PUSH	1
  1426 00000D58 57                              	PUSH	EDI
  1427 00000D59 FF 76 10                        	PUSH	DWORD [16+ESI]
  1428 00000D5C E8 [00000000]                   	CALL	_timer_init
  1429 00000D61 6A 32                           	PUSH	50
  1430 00000D63 FF 76 10                        	PUSH	DWORD [16+ESI]
  1431 00000D66 E8 [00000000]                   	CALL	_timer_settimer
  1432 00000D6B 83 C4 14                        	ADD	ESP,20
  1433 00000D6E EB B4                           	JMP	L230
  1434 00000D70                                 L228:
  1435 00000D70 E8 [00000000]                   	CALL	_io_sti
  1436 00000D75 C7 45 44 FFFFFFFF               	MOV	DWORD [68+EBP],-1
  1437 00000D7C E9 FFFFFD8C                     	JMP	L204
  1438 00000D81                                 L234:
  1439 00000D81 E8 [00000000]                   	CALL	_timer_alloc
  1440 00000D86 89 45 44                        	MOV	DWORD [68+EBP],EAX
  1441 00000D89 C6 40 09 01                     	MOV	BYTE [9+EAX],1
  1442 00000D8D E9 FFFFFD7B                     	JMP	L204
  1443 00000D92                                 L235:
  1444 00000D92 8B 45 24                        	MOV	EAX,DWORD [36+EBP]
  1445 00000D95 05 00000100                     	ADD	EAX,256
  1446 00000D9A 50                              	PUSH	EAX
  1447 00000D9B 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
  1448 00000D9E 83 C0 10                        	ADD	EAX,16
  1449 00000DA1 50                              	PUSH	EAX
  1450 00000DA2 53                              	PUSH	EBX
  1451 00000DA3 E8 [00000000]                   	CALL	_timer_init
  1452 00000DA8 E9 FFFFFD5D                     	JMP	L242
  1453 00000DAD                                 L236:
  1454 00000DAD FF 75 24                        	PUSH	DWORD [36+EBP]
  1455 00000DB0 53                              	PUSH	EBX
  1456 00000DB1 E8 [00000000]                   	CALL	_timer_settimer
  1457 00000DB6 E9 FFFFFD66                     	JMP	L243
  1458 00000DBB                                 L237:
  1459 00000DBB 53                              	PUSH	EBX
  1460 00000DBC E8 [00000000]                   	CALL	_timer_free
  1461 00000DC1 E9 FFFFFF1A                     	JMP	L240
