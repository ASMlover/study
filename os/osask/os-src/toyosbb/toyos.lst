     1 00000000                                 ; Copyright (c) 2013 ASMlover. All rights reserved.
     2 00000000                                 ;
     3 00000000                                 ; Redistribution and use in source and binary forms, with or without
     4 00000000                                 ; modification, are permitted provided that the following conditions
     5 00000000                                 ; are met:
     6 00000000                                 ;
     7 00000000                                 ;  * Redistributions of source code must retain the above copyright
     8 00000000                                 ;    notice, this list ofconditions and the following disclaimer.
     9 00000000                                 ;
    10 00000000                                 ;    notice, this list of conditions and the following disclaimer in
    11 00000000                                 ;  * Redistributions in binary form must reproduce the above copyright
    12 00000000                                 ;    the documentation and/or other materialsprovided with the
    13 00000000                                 ;    distribution.
    14 00000000                                 ;
    15 00000000                                 ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    16 00000000                                 ; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    17 00000000                                 ; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    18 00000000                                 ; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    19 00000000                                 ; COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    20 00000000                                 ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    21 00000000                                 ; BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    22 00000000                                 ; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    23 00000000                                 ; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    24 00000000                                 ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    25 00000000                                 ; ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    26 00000000                                 ; POSSIBILITY OF SUCH DAMAGE.
    27 00000000                                 
    28 00000000                                 
    29 00000000                                 ; toy-os 
    30 00000000                                 
    31 00000000                                 [instrset "i486p"]
    32  = 00000103                              VBEMODE   equ 0x103 ; 800 * 600 * 8bit
    33  = 00280000                              BOOTPACK  equ 0x00280000
    34  = 00100000                              DSKCAC    equ 0x00100000
    35  = 00008000                              DSKCAC0   equ 0x00008000
    36 00000000                                 
    37 00000000                                 ; BOOT_INFO
    38  = 00000FF0                              CYLS  equ 0x0ff0    ; setting boot sector
    39  = 00000FF1                              LEDS  equ 0x0ff1
    40  = 00000FF2                              VMODE equ 0x0ff2    ; information about number of color, bits of color
    41  = 00000FF4                              SCRNX equ 0x0ff4    ; screen X
    42  = 00000FF6                              SCRNY equ 0x0ff6    ; screen Y
    43  = 00000FF8                              VRAM  equ 0x0ff8    ; start address of bitmap buffer
    44 00000000                                   
    45                                            org 0xc200
    46 0000C200                                 
    47 0000C200                                   ; check if there's VBE 
    48 0000C200 B8 9000                           mov ax, 0x9000
    49 0000C203 8E C0                             mov es, ax 
    50 0000C205 BF 0000                           mov di, 0
    51 0000C208 B8 4F00                           mov ax, 0x4f00
    52 0000C20B CD 10                             int 0x10 
    53 0000C20D 3D 004F                           cmp ax, 0x004f
    54 0000C210 75 52                             jne screen320
    55 0000C212                                 
    56 0000C212                                   ; check version of VBE
    57 0000C212 26 8B 45 04                       mov ax, [es:di + 4]
    58 0000C216 3D 0200                           cmp ax, 0x0200
    59 0000C219 72 49                             jb  screen320     ; if (ax < 0x0200) goto screen320
    60 0000C21B                                 
    61 0000C21B                                   ; get information of screen
    62 0000C21B B9 0103                           mov cx, VBEMODE
    63 0000C21E B8 4F01                           mov ax, 0x4f01
    64 0000C221 CD 10                             int 0x10
    65 0000C223 3D 004F                           cmp ax, 0x004f
    66 0000C226 75 3C                             jne screen320 
    67 0000C228                                 
    68 0000C228                                   ; check the information of screen
    69 0000C228 26 80 7D 19 08                    cmp byte [es:di + 0x19], 8
    70 0000C22D 75 35                             jne screen320
    71 0000C22F 26 80 7D 1B 04                    cmp byte [es:di + 0x1b], 4
    72 0000C234 75 2E                             jne screen320
    73 0000C236 26 8B 05                          mov ax, [es:di + 0x00]
    74 0000C239 25 0080                           and ax, 0x0080
    75 0000C23C 74 26                             jz  screen320     ; if mode attribute's bit7 = 0, give up 
    76 0000C23E                                 
    77 0000C23E                                   ; change screen mode 
    78 0000C23E BB 4103                           mov bx, VBEMODE + 0x4000
    79 0000C241 B8 4F02                           mov ax, 0x4f02
    80 0000C244 CD 10                             int 0x10
    81 0000C246 C6 06 0FF2 08                     mov byte [VMODE], 8             ; record mode of screen
    82 0000C24B 26 8B 45 12                       mov ax, [es:di + 0x12]
    83 0000C24F A3 0FF4                           mov [SCRNX], ax 
    84 0000C252 26 8B 45 14                       mov ax, [es:di + 0x14]
    85 0000C256 A3 0FF6                           mov [SCRNY], ax 
    86 0000C259 66 26 8B 45 28                    mov eax, [es:di + 0x28]
    87 0000C25E 66 A3 0FF8                        mov [VRAM], eax
    88 0000C262 EB 20                             jmp keystatus 
    89 0000C264                                 
    90 0000C264                                 screen320:
    91 0000C264 B0 13                             mov al, 0x13      ; VGA graphics, 320 * 200 * 8bit 
    92 0000C266 B4 00                             mov ah, 0x00 
    93 0000C268 CD 10                             int 0x10 
    94 0000C26A C6 06 0FF2 08                     mov byte [VMODE], 8             ; record mode of screen
    95 0000C26F C7 06 0FF4 0140                   mov word [SCRNX], 320 
    96 0000C275 C7 06 0FF6 00C8                   mov word [SCRNY], 200 
    97 0000C27B 66 C7 06 0FF8 000A0000            mov dword [VRAM], 0x000a0000
    98 0000C284                                 
    99 0000C284                                   ; get all status of leds used BIOS 
   100 0000C284                                 keystatus:
   101 0000C284 B4 02                             mov ah, 0x02
   102 0000C286 CD 16                             int 0x16          ; keyboard BIOS
   103 0000C288 A2 0FF1                           mov [LEDS], al 
   104 0000C28B                                 
   105 0000C28B                                 
   106 0000C28B                                   ; PIC close all interrupt 
   107 0000C28B                                   ; must be initialize before cli 
   108 0000C28B B0 FF                             mov al, 0xff 
   109 0000C28D E6 21                             out 0x21, al 
   110 0000C28F 90                                nop
   111 0000C290 E6 A1                             out 0xa1, al
   112 0000C292                                 
   113 0000C292 FA                                cli               ; disabled interrupts of CPU level
   114 0000C293                                 
   115 0000C293                                   ; CPU xxxx
   116 0000C293 E8 00B4                           call  waitkeyboardout
   117 0000C296 B0 D1                             mov al, 0xd1
   118 0000C298 E6 64                             out 0x64, al 
   119 0000C29A E8 00AD                           call  waitkeyboardout
   120 0000C29D B0 DF                             mov al, 0xdf      ; enable a20
   121 0000C29F E6 60                             out 0x60, al 
   122 0000C2A1 E8 00A6                           call  waitkeyboardout
   123 0000C2A4                                 
   124 0000C2A4 0F 01 16 C38A                     lgdt  [gdtr0]
   125 0000C2A9 0F 20 C0                          mov   eax, cr0
   126 0000C2AC 66 25 7FFFFFFF                    and   eax, 0x7fffffff
   127 0000C2B2 66 83 C8 01                       or    eax, 0x00000001
   128 0000C2B6 0F 22 C0                          mov   cr0, eax
   129 0000C2B9 EB 00                             jmp   piplelineflush
   130 0000C2BB                                 piplelineflush:
   131 0000C2BB B0 08                             mov   al, 1 * 8
   132 0000C2BD 8E D8                             mov   ds, ax
   133 0000C2BF 8E C0                             mov   es, ax
   134 0000C2C1 8E E0                             mov   fs, ax
   135 0000C2C3 8E E8                             mov   gs, ax
   136 0000C2C5 8E D0                             mov   ss, ax
   137 0000C2C7                                 
   138 0000C2C7                                 ; bootpack 
   139 0000C2C7 66 BE 0000C390                    mov   esi, bootpack 
   140 0000C2CD 66 BF 00280000                    mov   edi, BOOTPACK
   141 0000C2D3 66 B9 00020000                    mov   ecx, 512 * 1024 / 4
   142 0000C2D9 E8 0075                           call  memcpy
   143 0000C2DC                                 
   144 0000C2DC                                 ; 
   145 0000C2DC                                 ; 
   146 0000C2DC 66 BE 00007C00                    mov   esi, 0x7c00
   147 0000C2E2 66 BF 00100000                    mov   edi, DSKCAC
   148 0000C2E8 66 B9 00000080                    mov   ecx, 512 / 4
   149 0000C2EE E8 0060                           call  memcpy
   150 0000C2F1                                 
   151 0000C2F1 66 BE 00008200                    mov   esi, DSKCAC0 + 512
   152 0000C2F7 66 BF 00100200                    mov   edi, DSKCAC + 512
   153 0000C2FD 66 B9 00000000                    mov   ecx, 0
   154 0000C303 8A 0E 0FF0                        mov   cl,  byte [CYLS]
   155 0000C307 66 69 C9 00001200                 imul  ecx, 512 * 18 * 2 / 4
   156 0000C30E 66 81 E9 00000080                 sub   ecx, 512 / 4
   157 0000C315 E8 0039                           call  memcpy
   158 0000C318                                 
   159 0000C318 66 BB 00280000                    mov   ebx, BOOTPACK
   160 0000C31E 67 66 8B 4B 10                    mov   ecx, [ebx + 16]
   161 0000C323 66 83 C1 03                       add   ecx, 3
   162 0000C327 66 C1 E9 02                       shr   ecx, 2
   163 0000C32B 74 10                             jz    skip
   164 0000C32D 67 66 8B 73 14                    mov   esi, [ebx + 20]
   165 0000C332 66 01 DE                          add   esi, ebx
   166 0000C335 67 66 8B 7B 0C                    mov   edi, [ebx + 12]
   167 0000C33A E8 0014                           call  memcpy
   168 0000C33D                                 skip:
   169 0000C33D 67 66 8B 63 0C                    mov   esp, [ebx + 12]
   170 0000C342 66 EA 0000001B 0010               jmp   dword 2 * 8 : 0x0000001b
   171 0000C34A                                 
   172 0000C34A                                 waitkeyboardout:
   173 0000C34A E4 64                             in    al, 0x64
   174 0000C34C 24 02                             and   al, 0x02
   175 0000C34E 75 FA                             jnz   waitkeyboardout
   176 0000C350 C3                                ret 
   177 0000C351                                 
   178 0000C351                                 memcpy:
   179 0000C351 67 66 8B 06                       mov   eax, [esi]
   180 0000C355 66 83 C6 04                       add   esi, 4
   181 0000C359 67 66 89 07                       mov   [edi], eax
   182 0000C35D 66 83 C7 04                       add   edi, 4
   183 0000C361 66 83 E9 01                       sub   ecx, 1
   184 0000C365 75 EA                             jnz   memcpy
   185 0000C367 C3                                ret 
   186 0000C368                                 
   187 0000C368 00 00 00 00 00 00 00 00           alignb  16 
   188 0000C370                                 
   189 0000C370                                 gdt0:
   190 0000C370 00 00 00 00 00 00 00 00           resb  8
   191 0000C378 FFFF 0000 9200 00CF               dw    0xffff, 0x0000, 0x9200, 0x00cf
   192 0000C380 FFFF 0000 9A28 0047               dw    0xffff, 0x0000, 0x9a28, 0x0047
   193 0000C388 0000                              dw    0
   194 0000C38A                                 gdtr0:
   195 0000C38A 0017                              dw    8 * 3 - 1
   196 0000C38C 0000C370                          dd    gdt0
   197 0000C390                                   alignb  16 
   198 0000C390                                 
   199 0000C390                                 bootpack:
